---
title: "좌표계"
author: Sang-Il Lee
date-modified: last-modified
number-sections: true
format: 
  html: 
    toc: true
code-link: true
code-copy: true
execute: 
  warning: false
  error: false
  freeze: auto
editor: visual
---

## 좌표계의 정의와 기본 좌표계

### 좌표계의 정의

### 기본 좌표계

### 지도 투영을 위한 좌표계

## 구체 혹은 타원체 좌표계

### 지리좌표계

{{< video https://www.youtube.com/watch?v=g52A2CPEi4A&t=1s >}}

### 측지좌표계

### 지심좌표계

### 좌표변환

## 평면 직각 좌표계

### 개념 규정

### 구성 요소

### 종류

### UTM 좌표계

#### UTM 좌표계의 개요

![https://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system](images/clipboard-1968212367.png)

![](images/clipboard-3549641415.png)

![](images/clipboard-3041164177.png){fig-align="center"}

#### UTM 좌표계와 우리나라

우선 우리나라가 포함된 UTM 그리드(51T, 52T, 51S, 52S)에 대한 개관도를 작성한다.

-   필수 패키지 불러오기

```{r}
library(tidyverse) 
library(rnaturalearth)
library(sf) 
library(tmap) 
library(tmaptools)
```

-   지리공간데이터 불러와 정리하기

```{r}
#| echo: true
#| output: false
#| eval: true
countries <- ne_download(scale = 50, type = "countries", category = "cultural") |> 
  st_as_sf()
topo_250 <- st_read(
  "D:/My R/Vector Data Manipulation Korea/Korea_Topo_Index/TN_MAPINDX_250K-polygon.shp", options = "ENCODING=CP949"
  )
topo_50 <- st_read(
  "D:/My R/Vector Data Manipulation Korea/Korea_Topo_Index/TN_MAPINDX_50K-polygon.shp", options = "ENCODING=CP949"
  )
utm_grid <- st_read(
  "D:/My R/World Data Manupulation/World UTM Grid/World_UTM_Grid.shp", options = "ENCODING=CP949"
  )

# utm_grid의 재투영
utm_grid <- utm_grid |> 
  st_transform(crs = st_crs(countries))

# UTM 이름 재정의
utm_grid <- utm_grid |> 
  mutate(
    utm_name = str_c(ZONE, ROW_)
  ) |> 
  relocate(
    utm_name
  )
```

-   특정 영역 선택하기

```{r}
utm_bound <- c(81, -4, 171, 60)
utm_grid_korea <- utm_grid |> 
  filter(
    utm_name %in% c("51T", "52T", "51S", "52S")
  )
```

-   지도 제작 및 저장

```{r}
my_map <- tm_shape(utm_grid_korea, bbox = utm_bound) + tm_fill(col = "gray80", lwd = 1, border.col = "black") + 
  tm_shape(countries) + tm_borders(col = "gray50", lwd = 0.75) +
  tm_shape(utm_grid) + tm_borders(col = "black", lwd = 1) + 
  tm_text(text = "utm_name", size = 0.7, col = "gray20") +
  tm_graticules(x = seq(84, 168, 6), y = seq(0, 56, 8), lwd = 0, labels.size = 0.5)
my_map
my.file.name <- paste0("outputs/6_2_1.png") 
tmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)
```

다음으로 서울이 포함된 북반구 52구역에 대한 투영을 실행한다. [epsg.io](https://epsg.io/)의 검색 결과 EPSG:32652임을 확인한다.

```{r}
# N52를 중심으로 한 대략적인 지역 선정
bb_utm_52 <- tibble(x = c(81, 81, 171, 171), y = c(-4, 60, -4, 60)) |> 
  st_as_sf(coords = c("x", "y"), crs = 4326) |> 
  st_bbox() |> 
  st_as_sfc()

# 국가 셰이프 파일에서 해당 부분만 골라내기
countries_bb <- st_intersection(countries, bb_utm_52) |> 
  st_make_valid()

# UTM N52의 투영법 적용(EPSG:32652)
countries_bb_utm <- st_transform(countries_bb, crs = 32652)

# UTM N52의 가상원점 지정
origin_n52 <- st_as_sf(tibble(x = 0, y = 0), coords = c("x", "y"), crs = 32652) |> 
  st_transform(crs = st_crs(countries))

# 서울 지점 셰이프 만들기
seoul_point <- st_as_sf(tibble(x = 126.9352778, y = 37.5700057), coords = c("x", "y"), crs = 4326)

# 그리드 생성 영역을 지정하고 그리드 생성
bb_n52 <- tibble(x = c(0, 1000000), y = c(-1000000, 7000000)) |> 
  st_as_sf(coords = c("x", "y"), crs = 32652) |> 
  st_bbox() |> 
  st_as_sfc()

bb_n52_grid <- st_make_grid(bb_n52, 100000)

# 지도 표현 영역 지정
bb <- c(-3000000, -500000, 3500000, 6000000)
my_map <- tm_shape(countries_bb_utm, bbox = bb) + tm_fill() +
  tm_graticules(x = seq(84, 172, 6), y = seq(0, 40, 10), lwd = 1.5) +
  tm_shape(bb_n52_grid) + tm_borders(lwd = 0.5) +
  tm_shape(origin_n52) + tm_symbols(col = "red", size = 0.5) +
  tm_shape(seoul_point) + tm_symbols(col = "black", size = 0.2)
my_map
my.file.name <- paste0("outputs/6_2_2.png") 
tmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)
```

우리나라의 TM 좌표계 지도를 제작한다.

-   지리공간데이터 불러와 정리하기

```{r}
# 시도 행정구역 지도와 지형도 도엽 지도를 불러옴
sido <- st_read(
  "D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2021_4Q/NOT_MOVE/SIDO_NM_2021_4Q_GEN_0040.shp", options = "ENCODING=CP949") 
topo_50 <- st_read(
  "D:/My R/Vector Data Manipulation Korea/Korea_Topo_Index/INDEX/TN_MAPINDX_50K.gpkg", options = "ENCODING=CP949")
topo_250 <- st_read(
  "D:/My R/Vector Data Manipulation Korea/Korea_Topo_Index/TN_MAPINDX_250K-polygon.shp", options = "ENCODING=CP949")

# 투영 원점의 셰이프 파일 생성
origins_df <- tibble(x = c(125, 127, 129, 131), y = c(38, 38, 38, 38))
origins <- st_as_sf(origins_df, coords = c("x", "y"), crs = 4326) 
origins <- st_transform(origins, crs = st_crs(sido))

# 개별 투영대의 평면 직각 좌표계 원점 셰이프 파일 생성: 개별 투영법에 의거 
origin_west <- st_as_sf(tibble(x = 0, y = 0), coords = c("x", "y"), crs = 5185) |> 
  st_transform(origin_west, crs = st_crs(sido))
origin_mid <- st_as_sf(tibble(x = 0, y = 0), coords = c("x", "y"), crs = 5186) |> 
  st_transform(origin_mid, crs = st_crs(sido))
origin_east <- st_as_sf(tibble(x = 0, y = 0), coords = c("x", "y"), crs = 5187) |> 
  st_transform(origin_east, crs = st_crs(sido))
origin_sea <- st_as_sf(tibble(x = 0, y = 0), coords = c("x", "y"), crs = 5188) |> 
  st_transform(origin_sea, crs = st_crs(sido))
```

중부 투영대의 지도를 제작한다.

```{r}
bb_mid <- tibble(x = c(-100000, 720000), y = c(-40000, 720000)) |> 
  st_as_sf(coords = c("x", "y"), crs = 5186) |> 
  st_bbox() |> 
  st_as_sfc()

bb_mid_grid <- st_make_grid(bb_mid, 20000)

my_map <- tm_shape(bb_mid_grid) + tm_borders(lty = "dotted", lwd = 0.5) +
  tm_shape(sido) + tm_fill(col = "gray75") +
  tm_graticules(x = c(123:132), lwd = 1.5) +
  tm_shape(topo_50) + tm_borders(col = "black", lwd = 1.25) +
  tm_shape(origins) + tm_symbols(col = "black", size = 0.5) +
  tm_shape(origin_mid) + tm_symbols(col = "red", size = 0.5)
my_map
my.file.name <- paste0("outputs/6_2_3.png") 
tmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)
```

동부 투영대의 지도를 제작한다.

```{r}
bb_east <- tibble(x = c(-300000, 520000), y = c(-40000, 720000)) |> 
  st_as_sf(coords = c("x", "y"), crs = 5187) |> 
  st_bbox() |> 
  st_as_sfc()

bb_east_grid <- st_make_grid(bb_east, 20000)

gyeongju <- topo_50 |> 
  filter(MAPID_NM == "경주")

my_map <- tm_shape(bb_east_grid) + tm_borders(lty = "dotted", lwd = 0.5) +
  tm_shape(sido) + tm_fill(col = "gray75") +
  tm_graticules(x = c(123:132), lwd = 1.5) +
  tm_shape(gyeongju) + tm_fill(col = "gray50") +
  tm_shape(topo_50) + tm_borders(col = "black", lwd = 1.25) +
  tm_shape(origins) + tm_symbols(col = "black", size = 0.5) +
  tm_shape(origin_east) + tm_symbols(col = "red", size = 0.5)
my_map
my.file.name <- paste0("outputs/6_2_4.png") 
tmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)
```

동해 투영대의 지도를 제작한다.

```{r}
bb_sea <- tibble(x = c(-500000, 320000), y = c(-40000, 720000)) |> 
  st_as_sf(coords = c("x", "y"), crs = 5188) |> 
  st_bbox() |> 
  st_as_sfc()

bb_sea_grid <- st_make_grid(bb_sea, 20000)

my_map <- tm_shape(bb_sea_grid) + tm_borders(lty = "dotted", lwd = 0.5) +
  tm_shape(sido) + tm_fill(col = "gray75") +
  tm_graticules(x = c(123:132), lwd = 1.5) +
  tm_shape(topo_50) + tm_borders(col = "black", lwd = 1.25) +
  tm_shape(origins) + tm_symbols(col = "black", size = 0.5) +
  tm_shape(origin_sea) + tm_symbols(col = "red", size = 0.5)
my_map
my.file.name <- paste0("outputs/6_2_5.png") 
tmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)
```

서부 투영대의 지도를 제작한다.

```{r}
bb_west <- tibble(x = c(100000, 920000), y = c(-40000, 720000)) |> 
  st_as_sf(coords = c("x", "y"), crs = 5185) |> 
  st_bbox() |> 
  st_as_sfc()

bb_west_grid <- st_make_grid(bb_west, 20000)

my_map <- tm_shape(bb_west_grid) + tm_borders(lty = "dotted", lwd = 0.5) +
  tm_shape(sido) + tm_fill(col = "gray75") +
  tm_graticules(x = c(123:132), lwd = 1.5) +
  tm_shape(topo_50) + tm_borders(col = "black", lwd = 1.25) +
  tm_shape(origins) + tm_symbols(col = "black", size = 0.5) +
  tm_shape(origin_west) + tm_symbols(col = "red", size = 0.5)
my_map
my.file.name <- paste0("outputs/6_2_6.png") 
tmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)
```

### IMW 좌표계

### 우리나라 TM 좌표계

### 국가 그리드

#### 미국의 SPCS83

![](images/clipboard-1909351142.png)

![https://gisgeography.com/state-plane-coordinate-system-spcs/](images/clipboard-673631514.png)

#### 일본의 TM 좌표계

![](images/clipboard-3470015781.png){fig-align="center"}

#### 영국의 BNG(British National Grid)

![](images/clipboard-2153214845.png){fig-align="center"}

### CRS

#### 정의

#### 방식

#### 주요 적용 사례
