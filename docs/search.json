[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Cartography",
    "section": "",
    "text": "Preface\n이것은 내가 최초로 만드는 웹북이다. 이번 학기에 수업을 진행하면서 챕터를 하나씩 덧붙여 여름방학 끝날 즈음에는 하나의 책으로 완성하고 싶다.\n중간에 챕터의 구성이 조금 달라질 수 있다.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Harwood, Jeremy. 2014. 지구 끝까지: 세상을 바꾼 100장의 지도.\n서울: 푸른길.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "part_1.html",
    "href": "part_1.html",
    "title": "지도와 지도학적 의사소통",
    "section": "",
    "text": "이 장에서는 지도와 지도학에 대한 가장 기본적인 사항을 다룬다. 이 장은 다음과 같이 크게 세 부분으로 나뉘어진다.\n\n지도와 지도학\n지도의 종류\n지도학적 의사소통과 지도화 과정",
    "crumbs": [
      "지도와 지도학적 의사소통"
    ]
  },
  {
    "objectID": "01_history.html",
    "href": "01_history.html",
    "title": "1  지도의 역사",
    "section": "",
    "text": "이상일의 번역서에 따르면, 그렇고 그렇다 (Harwood 2014).\n\n\n\n\nHarwood, Jeremy. 2014. 지구 끝까지: 세상을 바꾼 100장의 지도. 서울: 푸른길.",
    "crumbs": [
      "지도와 지도학적 의사소통",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>지도의 역사</span>"
    ]
  },
  {
    "objectID": "part_2.html",
    "href": "part_2.html",
    "title": "지도 투영",
    "section": "",
    "text": "이 장에서는 지도 투영과 관련된 궁극적인 테마를 다룬다. 이 장은 다음과 같이 크게 네 부분으로 나뉘어진다. ㅜ\n\n지구의 모형화와 데이텀\n좌표계\n지도 투영의 개념과 원리\n지도 투영의 종류",
    "crumbs": [
      "지도 투영"
    ]
  },
  {
    "objectID": "part_3.html",
    "href": "part_3.html",
    "title": "주제도 제작",
    "section": "",
    "text": "이 장에서는 주제도 제작의 전반을 다룬다. 이 장은 다음과 같이 크게 7개의 절로 나뉘어진다.\n\n공간적 현상의 유형화\n지도화 과정과 지도 디자인\n도형표현도의 제작\n점밀도도의 제작\n콜로플레스맵의 제작\n등치선도의 제작\n유선도의 제작",
    "crumbs": [
      "주제도 제작"
    ]
  },
  {
    "objectID": "part_4.html",
    "href": "part_4.html",
    "title": "Advanced Topics",
    "section": "",
    "text": "이 장은 지도학의 보다 고차원적인 주제를 다룬다. 이 장은 다음과 같이 크게 3개의 절로 나뉜다.\n\n웹매핑\n탐색적 공간데이터 분석\n지도학의 미래",
    "crumbs": [
      "Advanced Topics"
    ]
  },
  {
    "objectID": "04_cartographic_communication.html",
    "href": "04_cartographic_communication.html",
    "title": "\n4  지도학적 의사소통과 지도화 과정\n",
    "section": "",
    "text": "4.1 개념 규정",
    "crumbs": [
      "지도와 지도학적 의사소통",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>지도학적 의사소통과 지도화 과정</span>"
    ]
  },
  {
    "objectID": "04_cartographic_communication.html#시각-변수",
    "href": "04_cartographic_communication.html#시각-변수",
    "title": "4  지도학적 의사소통과 지도화 과정",
    "section": "7.1 시각 변수",
    "text": "7.1 시각 변수",
    "crumbs": [
      "Maps and Cartography",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>지도학적 의사소통과 지도화 과정</span>"
    ]
  },
  {
    "objectID": "04_cartographic_communication.html#지도학적-일반화",
    "href": "04_cartographic_communication.html#지도학적-일반화",
    "title": "\n4  지도학적 의사소통과 지도화 과정\n",
    "section": "\n4.2 지도학적 일반화",
    "text": "4.2 지도학적 일반화",
    "crumbs": [
      "지도와 지도학적 의사소통",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>지도학적 의사소통과 지도화 과정</span>"
    ]
  },
  {
    "objectID": "04_cartographic_communication.html#기호화",
    "href": "04_cartographic_communication.html#기호화",
    "title": "\n4  지도학적 의사소통과 지도화 과정\n",
    "section": "\n4.3 기호화",
    "text": "4.3 기호화\n\n4.3.1 시각 변수\n\n4.3.1.1 준비 작업\n\n필수적인 패키지 불러오기\n\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(sf)\nlibrary(tmap)\nlibrary(rayshader)\n\n\n지리공간데이터 불러오기\n\n\nseoul_EMD &lt;- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2021_4Q/SEOUL_EMD_2021_4Q.shp\", options = \"ENCODING=CP949\")\nseoul_EMD_2020 &lt;- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2020_2Q/SEOUL_EMD_2020_2Q.shp\", options = \"ENCODING=CP949\")\nseoul_gu &lt;- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2021_4Q/SEOUL_GU_2021_4Q.shp\", options = \"ENCODING=CP949\")\nseoul_sido &lt;- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2021_4Q/SEOUL_SIDO_2021_4Q.shp\", options = \"ENCODING=CP949\")\n\n\n지도 확인\n\n\nqtm(seoul_EMD)\n\n\n\n\n\n\n\n\n1인가구 속성 데이터 불러오기\n\n\nhouse_SDGGEMD_2020 &lt;- read_excel(\n  \"D:/My R/Population Geography/3 Population Structure/Housing_Size_2020_Adj.xlsx\", sheet = 1\n  )\nView(house_SDGGEMD_2020)\n\n\n결합하기\n\n\nseoul_EMD_2020 &lt;- seoul_EMD_2020 |&gt; \n  mutate(\n    EMD_ID = as.numeric(EMD_ID)\n  )\nmy_df &lt;-seoul_EMD_2020 |&gt; \n  left_join(\n    house_SDGGEMD_2020, join_by(EMD_ID == Code)\n  )\n\n\n4.3.1.2 조감고도 perspective heights\n\nggplot2를 이용하여 지도 제작\n\n\nmy_map &lt;- my_df |&gt; \n  ggplot() +\n  geom_sf(\n    aes(fill = House1_p), \n    color = NA, show.legend = FALSE\n    ) +\n  labs(fill = \"% of Single \\n Households\") + \n  scale_fill_viridis_c() +\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank(),\n    panel.background = element_blank()\n  )\nmy_map\n\n\n\n\n\n\n\n\n3D\n\n\nplot_gg(my_map, \n        width = 5, height = 4, scale = 300, \n        multicore = TRUE, windowsize = c(1726, 1174), \n        zoom = 0.35, phi = 55, theta = 20, sunangle = 225, fov = 70)\nSys.sleep(0.2)\n\n\n포착\n\n\nrender_snapshot(clear = TRUE, file = \"outputs/seoul_3d.png\")\n\n\n4.3.1.3 색상 hue\n\n지도 제작\n\n\nlibrary(pals)\nmy_map &lt;- my_df |&gt; \n  tm_shape() + \n  tm_polygons(\n    col = \"SGG1_NM\",\n    border.col = \"gray30\", lwd = 0.25, \n    palette = alphabet2(),\n    legend.show = FALSE\n    )\nmy_map\n\n\n\n\n\n\n\n\n저장\n\n4.3.1.4 명도 value\n\n지도 제작\n\n\nmy_map &lt;- my_df |&gt; \n  tm_shape() + \n  tm_polygons(\n    col = \"House1_p\",\n    n = 10,\n    border.col = \"gray30\", lwd = 0.25, \n    palette = \"Blues\", n = 5,\n    legend.show = FALSE\n    )\nmy_map\n\n\n\n\n\n\n\n\n저장\n\n4.3.1.5 채도 saturation\n\n지도 제작\n\n\nsaturation_5 &lt;- c(\n  \"#18C800\", \"#29B216\", \"#379F29\", \"#468B3D\", \"#557850\"\n  )\nmy_map &lt;- my_df |&gt; \n  tm_shape() + \n  tm_polygons(\n    col = \"House1_p\",\n    border.col = \"gray30\", lwd = 0.25, \n    palette = saturation_5, n = 5,\n    legend.show = FALSE\n    )\nmy_map\n\n\n\n\n\n\n\n\n저장\n\n4.3.1.6 질감 texture\n\nmy_df |&gt; \n  ggplot() +\n  geom_sf(\n    aes(fill = House1_p), \n    color = NA, show.legend = FALSE\n    ) +\n  labs(fill = \"% of Single \\n Households\") + \n  scale_fill_viridis_c() +\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank(),\n    panel.background = element_blank()\n  )",
    "crumbs": [
      "지도와 지도학적 의사소통",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>지도학적 의사소통과 지도화 과정</span>"
    ]
  },
  {
    "objectID": "03_map_types.html",
    "href": "03_map_types.html",
    "title": "\n3  지도의 종류\n",
    "section": "",
    "text": "3.1 심상지도와 물리적 지도",
    "crumbs": [
      "지도와 지도학적 의사소통",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>지도의 종류</span>"
    ]
  },
  {
    "objectID": "03_map_types.html#일반도와-주제도",
    "href": "03_map_types.html#일반도와-주제도",
    "title": "\n3  지도의 종류\n",
    "section": "\n3.2 일반도와 주제도",
    "text": "3.2 일반도와 주제도\n\n3.2.1 일반도\n\n3.2.2 주제도\n\n3.2.2.1 전형적인 주제도\n\n필수적인 패키지 불러오기\n\n\nlibrary(tidyverse) \nlibrary(readxl) \nlibrary(sf) \nlibrary(tmap) \nlibrary(tmaptools)\nlibrary(rayshader)\nlibrary(pals) \n\n\n지리공간데이터 불러오기\n\n\nseoul_EMD &lt;- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2021_4Q/SEOUL_EMD_2021_4Q.shp\", options = \"ENCODING=CP949\"\n  ) \n\noptions:        ENCODING=CP949 \nReading layer `SEOUL_EMD_2021_4Q' from data source \n  `D:\\My R\\Korean Administrative Areas\\행정구역 셰이프 파일\\2 Original Cleaning\\2021_4Q\\SEOUL_EMD_2021_4Q.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 426 features and 15 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 935035.3 ymin: 1936666 xmax: 972067.6 ymax: 1966987\nProjected CRS: KGD2002 / Unified CS\n\nseoul_EMD_2020 &lt;- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2020_2Q/SEOUL_EMD_2020_2Q.shp\", options = \"ENCODING=CP949\"\n  ) \n\noptions:        ENCODING=CP949 \nReading layer `SEOUL_EMD_2020_2Q' from data source \n  `D:\\My R\\Korean Administrative Areas\\행정구역 셰이프 파일\\2 Original Cleaning\\2020_2Q\\SEOUL_EMD_2020_2Q.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 425 features and 15 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 935035.3 ymin: 1936666 xmax: 972067.6 ymax: 1966987\nProjected CRS: KGD2002 / Unified CS\n\nseoul_gu &lt;- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2021_4Q/SEOUL_GU_2021_4Q.shp\", options = \"ENCODING=CP949\"\n  ) \n\noptions:        ENCODING=CP949 \nReading layer `SEOUL_GU_2021_4Q' from data source \n  `D:\\My R\\Korean Administrative Areas\\행정구역 셰이프 파일\\2 Original Cleaning\\2021_4Q\\SEOUL_GU_2021_4Q.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 25 features and 9 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 935035.3 ymin: 1936666 xmax: 972067.6 ymax: 1966987\nProjected CRS: KGD2002 / Unified CS\n\nseoul_sido &lt;- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2021_4Q/SEOUL_SIDO_2021_4Q.shp\", options = \"ENCODING=CP949\"\n  )\n\noptions:        ENCODING=CP949 \nReading layer `SEOUL_SIDO_2021_4Q' from data source \n  `D:\\My R\\Korean Administrative Areas\\행정구역 셰이프 파일\\2 Original Cleaning\\2021_4Q\\SEOUL_SIDO_2021_4Q.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 935035.3 ymin: 1936666 xmax: 972067.6 ymax: 1966987\nProjected CRS: KGD2002 / Unified CS\n\n\n\n지도 확인\n\n\nqtm(seoul_EMD_2020)\n\n\n\n\n\n\n\n\n1인가구 속성 데이터 불러오기\n\n\nhouse_SDGGEMD_2020 &lt;- read_excel(\n  \"D:/My R/Population Geography/3 Population Structure/Housing_Size_2020_Adj.xlsx\", sheet = 1\n  )\nglimpse(house_SDGGEMD_2020)\n\nRows: 3,809\nColumns: 17\n$ Code     &lt;dbl&gt; 0, 3, 4, 5, 11, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 3…\n$ Region   &lt;chr&gt; \"전국\", \"동부\", \"읍부\", \"면부\", \"서울특별시\", \"부산광역시\", \"…\n$ T_house  &lt;dbl&gt; 20926710, 16896701, 2021664, 2008345, 3982290, 1405037, 98581…\n$ House1   &lt;dbl&gt; 6643354, 5300490, 620899, 721965, 1390701, 455207, 304543, 32…\n$ House2   &lt;dbl&gt; 5864525, 4533570, 600001, 730954, 1033901, 411455, 276237, 31…\n$ House3   &lt;dbl&gt; 4200629, 3498178, 394057, 308394, 792690, 282233, 205048, 251…\n$ House4   &lt;dbl&gt; 3271315, 2796159, 303647, 171509, 602791, 203769, 159654, 198…\n$ House5   &lt;dbl&gt; 761417, 625579, 81207, 54631, 130122, 42608, 33131, 44949, 24…\n$ House6   &lt;dbl&gt; 147172, 115014, 16862, 15296, 25770, 7874, 5976, 8440, 4011, …\n$ House7   &lt;dbl&gt; 38298, 27711, 4991, 5596, 6315, 1891, 1227, 2127, 941, 967, 5…\n$ House1_p &lt;dbl&gt; 31.74581, 31.36997, 30.71227, 35.94826, 34.92214, 32.39822, 3…\n$ House2_p &lt;dbl&gt; 28.02411, 26.83110, 29.67857, 36.39584, 25.96247, 29.28428, 2…\n$ House3_p &lt;dbl&gt; 20.07305, 20.70332, 19.49172, 15.35563, 19.90538, 20.08723, 2…\n$ House4_p &lt;dbl&gt; 15.632247, 16.548550, 15.019657, 8.539818, 15.136793, 14.5027…\n$ House5_p &lt;dbl&gt; 3.638494, 3.702374, 4.016840, 2.720200, 3.267517, 3.032518, 3…\n$ House6_p &lt;dbl&gt; 0.7032735, 0.6806891, 0.8340654, 0.7616221, 0.6471151, 0.5604…\n$ House7_p &lt;dbl&gt; 0.1830101, 0.1640024, 0.2468758, 0.2786374, 0.1585771, 0.1345…\n\n\n\n결합하기\n\n\nseoul_EMD_2020 &lt;- seoul_EMD_2020 |&gt; \n  mutate(\n    EMD_ID = as.numeric(EMD_ID)\n  )\nmy_df &lt;-seoul_EMD_2020 |&gt; \n  left_join(\n    house_SDGGEMD_2020, join_by(EMD_ID == Code)\n  )\n\n\n전형적인 주제도 제작\n\n\nmin_max &lt;- my_df |&gt; \n  st_drop_geometry() |&gt; \n  summarize(\n    min_value = format(round(min(House1_p, na.rm = TRUE), \n                             digits = 1), nsmall = 1),\n    max_value = format(round(max(House1_p, na.rm = TRUE), \n                             digits = 1), nsmall = 1)\n  )\nmin.val &lt;- min_max[[1]]\nmax.val &lt;- min_max[[2]]\n\nmy_map &lt;- tm_shape(my_df) +\n  tm_polygons(\n    \"House1_p\",\n    style = \"fixed\", \n    palette = \"BuPu\", \n    border.col = \"gray40\", \n    lwd = 0.25, \n    border.alpha = 1, \n    breaks = c(-Inf, 15, 25, 35, 45, 55, 65, Inf),\n    labels = c(paste0(\"&lt; 15\", \" (Min. \", min.val, \")\"), \n               \"15 ~ 25\", \"25 ~ 35\", \"35 ~ 45\", \"45 ~ 55\", \n               \"55 ~ 65\", paste0(\"&gt;= 65\", \" (Max. \", max.val, \")\")), \n    title = \"One-Person (%)\", \n    legend.hist = FALSE, \n    legend.show = TRUE) +\n  tm_shape(seoul_gu) + \n  tm_polygons(alpha = 0, border.col = \"gray20\", lwd = 0.75) +\n  tm_legend(\n    legend.format = list(digits = 1), \n    legend.title.size = 0.6, \n    legend.text.size = 0.45,\n    legend.position = c(0.85, 0.05)) +\n  tm_layout(\n    frame = TRUE, \n    title = \"One-Person Households in Seoul, 2020\", \n    title.position = c(\"center\", \"top\"), \n    title.size = 0.9,\n    bg.color = \"white\",\n    inner.margins = c(0.05, 0.05, 0.08, 0.12)) +\n  tm_scale_bar(\n    color.dark = \"gray60\",\n    text.size = 0.25,\n    breaks = seq(0, 10, 2),\n    position = c(0.03, 0.01)) + \n  tm_credits(\n    \"SANG-IL LEE, Geograhy Education at SNU, 2024\", \n    size = 0.3, position = c(0.78, 0.01)\n    )\n\nmy_map\n\n\n\n\n\n\n\n\n저장\n\n3.2.3 일반도-주제도 연속체\n\n3.2.3.1 피처맵\n\n지도 제작\n\n\nmy_map &lt;- my_df |&gt; \n  tm_shape() +\n  tm_borders(col = \"gray20\", lwd = 0.75)\nmy_map\n\n\n\n\n\n\n\n\n저장\n\n3.2.3.2 사건 분포도\n\n사망 교통사고 데이터 불러오기\n\n\naccident &lt;- st_read(\"D:/My R/Vector Data Manipulation Korea/Public_Data_Portal/accident_seoul_2022.shp\")\n\nReading layer `accident_seoul_2022' from data source \n  `D:\\My R\\Vector Data Manipulation Korea\\Public_Data_Portal\\accident_seoul_2022.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 215 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 938902 ymin: 1939409 xmax: 969421 ymax: 1964119\nProjected CRS: KGD2002 / Unified CS\n\n\n\n지도 제작\n\n\nmy_map &lt;- my_df |&gt; \n  tm_shape() + \n  tm_borders(col = \"gray20\", lwd = 0.75) +\n  tm_shape(accident) + tm_dots(size = 0.15)\nmy_map\n\n\n\n\n\n\n\n\n저장\n\n3.2.3.3 정성적 주제도\n\n지도 제작\n\n\nmy_map &lt;- my_df |&gt; \n  tm_shape() + \n  tm_polygons(\n    col = \"SGG1_NM\",\n    border.col = \"gray20\", lwd = 0.75, \n    palette = pals::alphabet2(),\n    legend.show = FALSE\n    )\nmy_map\n\n\n\n\n\n\n\n\n저장\n\n3.2.3.4 정량적 주제도\n\n지도 제작\n\n\nmy_map &lt;- my_df |&gt; \n  tm_shape() + \n  tm_polygons(\n    col = \"House1_p\",\n    breaks = c(-Inf, 15, 25, 35, 45, 55, 65, Inf),\n    palette = \"Oranges\",\n    border.col = \"gray20\", lwd = 0.75, \n    legend.show = FALSE\n    )\nmy_map\n\n\n\n\n\n\n\n\n저장",
    "crumbs": [
      "지도와 지도학적 의사소통",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>지도의 종류</span>"
    ]
  },
  {
    "objectID": "03_map_types.html#정성적-주제도와-정량적-주제도",
    "href": "03_map_types.html#정성적-주제도와-정량적-주제도",
    "title": "\n3  지도의 종류\n",
    "section": "\n3.3 정성적 주제도와 정량적 주제도",
    "text": "3.3 정성적 주제도와 정량적 주제도\n\n3.3.1 정량적 주제도\n\n3.3.1.1 서울의 인구분포 사례\n\n인구수 속성 데이터 불러오기\n\n\npop_SDGGEMD_2020 &lt;- read_excel(\n  \"D:/My R/Korea Census Data Manipulation/1 Population Basic/DM_ADJ_Census_2020.xlsx\", sheet = 1\n  )\n\n\n결합하기: 위와 구분하기 위해 my_df_2라고 지정\n\n\nmy_df_2 &lt;-seoul_EMD_2020 |&gt; \n  left_join(\n    pop_SDGGEMD_2020, join_by(EMD_ID == Code)\n  )\n\n\n인구밀도 계산\n\n\nmy_df_2$area &lt;- st_area(my_df_2) / 1000000\nmy_df_2 &lt;- my_df_2 |&gt; \n  mutate(\n    pop_den_t = pop_t / area\n  )\n\n\n3.3.1.2 도형표현도\n\n지도 제작\n\n\nmy_map &lt;- tm_shape(my_df_2) + \n  tm_borders(col = \"gray10\", lwd = 0.25) +\n  tm_shape(seoul_gu) + tm_borders(col = \"gray10\", lwd = 0.75) +\n  tm_shape(my_df_2) + \n  tm_symbols(size = \"pop_t\", scale = 1.5, alpha = 0.75, \n             col = \"#a63603\",border.lwd = 0, \n             legend.size.show = FALSE) +\n  tm_scale_bar(\n    color.dark = \"gray60\",\n    text.size = 0.25,\n    breaks = seq(0, 10, 2),\n    position = c(0.03, 0.01)) + \n  tm_credits(\n    \"SANG-IL LEE, Geograhy Education at SNU, 2024\", \n    size = 0.3, position = c(0.78, 0.01)\n    )\nmy_map\n\n\n\n\n\n\n\n\n저장\n\n3.3.1.3 점밀도도\n\n포인트 생성: 시간이 조금 걸리므로 따로 실행\n\n\nmy_seoul_point &lt;- my_df_2 |&gt; \n  st_sample(size = round(my_df_2$pop_t/500), \n            type = \"random\", exact = TRUE) |&gt; \n  st_sf()\n\n\n지도 제작\n\n\nmy_map &lt;- tm_shape(my_df_2) + \n  tm_borders(col = \"gray10\", lwd = 0.25) +\n  tm_shape(my_seoul_point) + \n  tm_dots(size = 0.005, alpha = 0.75, col = \"#a63603\") +\n  tm_shape(seoul_gu) + tm_borders(col = \"gray10\", lwd = 0.75) +\n  tm_scale_bar(\n    color.dark = \"gray60\",\n    text.size = 0.25,\n    breaks = seq(0, 10, 2),\n    position = c(0.03, 0.01)) + \n  tm_credits(\n    \"SANG-IL LEE, Geograhy Education at SNU, 2024\", \n    size = 0.3, position = c(0.78, 0.01)\n    )\nmy_map\n\n\n\n\n\n\n\n\n저장\n\n3.3.1.4 단계구분도\n\n지도 제작\n\n\nmy_map &lt;- tm_shape(my_df_2) +\n  tm_polygons(\n    \"pop_den_t\",\n    style = \"fixed\", \n    palette = \"Oranges\", \n    border.col = \"gray40\", \n    lwd = 0.25, \n    border.alpha = 1, \n    breaks = c(-Inf, 10000, 15000, 20000, 25000, 30000, 40000, Inf),\n    legend.show = FALSE) +\n  tm_shape(seoul_gu) + \n  tm_polygons(alpha = 0, border.col = \"gray20\", lwd = 0.75) +\n  tm_credits(\n    \"SANG-IL LEE, Geograhy Education at SNU, 2024\", \n    size = 0.3, position = c(0.78, 0.01)\n    )\nmy_map\n\n\n\n\n\n\n\n\n저장\n\n3.3.1.5 등치선도\n\n준비 과정\n\n\n# sp로 만들기\nlibrary(sp)\nmy_centroid &lt;- st_centroid(my_df_2)\nmy_centroid_sp &lt;- as(my_centroid, \"Spatial\")\nmy_df_2_sp &lt;- as(my_df_2, \"Spatial\")\nmy_seoul &lt;- st_union(seoul_gu)\nmy_seoul_sp &lt;- as(my_seoul, \"Spatial\")\n\n# 인터폴레이션을 위한 바탕 래스터 만들고 정의하기 \nlibrary(terra)\ngrd &lt;- as.data.frame(spsample(my_seoul_sp, \"regular\", n = 100000))\nnames(grd) &lt;- c(\"X\", \"Y\")\ncoordinates(grd) &lt;- c(\"X\", \"Y\")\ngridded(grd) &lt;- TRUE\nfullgrid(grd) &lt;- TRUE\ncrs(grd) &lt;- crs(my_centroid_sp)\n\n# TPS (thin plate spline) 방식의 인터폴레이션 실행 및 등치선 생성\nlibrary(fields)\nlibrary(raster)\nm &lt;- Tps(coordinates(my_centroid_sp), my_centroid_sp$pop_den_t)\ntps &lt;- interpolate(raster(grd), m)\ntps &lt;- mask(tps, my_seoul_sp)\ncrs(tps) &lt;- CRS('+init=EPSG:5179') # 힘들었음. st_crs()는 먹지 않음.\ncont.tps &lt;- rasterToContour(tps)\n\n\n지도 제작\n\n\nmy_map &lt;- tm_shape(seoul_gu) +\n  tm_borders() + \n  tm_shape(tps) + \n  tm_raster(\n    style = \"fixed\", \n    breaks = c(-Inf, 10000, 15000, 20000, 25000, 30000, 40000, Inf),     palette = \"Oranges\", legend.show = FALSE) +\n  tm_shape(subset(\n    cont.tps, \n    level %in% c(10000, 15000, 20000, 25000, 30000, 40000))) +  \n  tm_iso(\n      text = \"level\", \n      color = \"black\", \n      lwd = 0.5, \n      size = 0.5, \n      alpha = 0.7) +\n  tm_shape(seoul_gu) + \n  tm_polygons(alpha = 0, border.col = \"gray20\", lwd = 0.75) +\n  tm_credits(\n    \"SANG-IL LEE, Geograhy Education at SNU, 2024\", \n    size = 0.3, position = c(0.78, 0.01)\n    )\nmy_map\n\n\n\n\n\n\n\n\n저장",
    "crumbs": [
      "지도와 지도학적 의사소통",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>지도의 종류</span>"
    ]
  },
  {
    "objectID": "03_map_types.html#단변량-주제도와-다변량-주제도",
    "href": "03_map_types.html#단변량-주제도와-다변량-주제도",
    "title": "\n3  지도의 종류\n",
    "section": "\n3.4 단변량 주제도와 다변량 주제도",
    "text": "3.4 단변량 주제도와 다변량 주제도",
    "crumbs": [
      "지도와 지도학적 의사소통",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>지도의 종류</span>"
    ]
  },
  {
    "objectID": "03_map_types.html#대축척-주제도와-소축척-주제도",
    "href": "03_map_types.html#대축척-주제도와-소축척-주제도",
    "title": "\n3  지도의 종류\n",
    "section": "\n3.5 대축척 주제도와 소축척 주제도",
    "text": "3.5 대축척 주제도와 소축척 주제도",
    "crumbs": [
      "지도와 지도학적 의사소통",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>지도의 종류</span>"
    ]
  },
  {
    "objectID": "06_coordinate_system.html",
    "href": "06_coordinate_system.html",
    "title": "\n6  좌표계\n",
    "section": "",
    "text": "6.1 좌표계의 정의와 기본 좌표계",
    "crumbs": [
      "지도 투영",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>좌표계</span>"
    ]
  },
  {
    "objectID": "06_coordinate_system.html#좌표계의-정의와-기본-좌표계",
    "href": "06_coordinate_system.html#좌표계의-정의와-기본-좌표계",
    "title": "\n6  좌표계\n",
    "section": "",
    "text": "6.1.1 좌표계의 정의\n\n6.1.2 기본 좌표계\n\n6.1.3 지도 투영을 위한 좌표계",
    "crumbs": [
      "지도 투영",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>좌표계</span>"
    ]
  },
  {
    "objectID": "06_coordinate_system.html#구체-혹은-타원체-좌표계",
    "href": "06_coordinate_system.html#구체-혹은-타원체-좌표계",
    "title": "\n6  좌표계\n",
    "section": "\n6.2 구체 혹은 타원체 좌표계",
    "text": "6.2 구체 혹은 타원체 좌표계\n\n6.2.1 지리좌표계\n\n\n6.2.2 측지좌표계\n\n6.2.3 지심좌표계\n\n6.2.4 좌표변환",
    "crumbs": [
      "지도 투영",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>좌표계</span>"
    ]
  },
  {
    "objectID": "06_coordinate_system.html#평면-직각-좌표계",
    "href": "06_coordinate_system.html#평면-직각-좌표계",
    "title": "\n6  좌표계\n",
    "section": "\n6.3 평면 직각 좌표계",
    "text": "6.3 평면 직각 좌표계\n\n6.3.1 개념 규정\n\n6.3.2 구성 요소\n\n6.3.3 종류\n\n6.3.4 UTM 좌표계\n\n6.3.4.1 UTM 좌표계의 개요\n\n\nhttps://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system\n\n\n\n\n\n\n\n6.3.4.2 UTM 좌표계와 우리나라\n우선 우리나라가 포함된 UTM 그리드(51T, 52T, 51S, 52S)에 대한 개관도를 작성한다.\n\n필수 패키지 불러오기\n\n\nlibrary(tidyverse) \nlibrary(rnaturalearth)\nlibrary(sf) \nlibrary(tmap) \nlibrary(tmaptools)\n\n\n지리공간데이터 불러와 정리하기\n\n\ncountries &lt;- ne_download(scale = 50, type = \"countries\", category = \"cultural\") |&gt; \n  st_as_sf()\nutm_grid &lt;- st_read(\n  \"D:/My R/World Data Manupulation/World UTM Grid/World_UTM_Grid.shp\", options = \"ENCODING=CP949\"\n  )\n\n# utm_grid의 재투영\nutm_grid &lt;- utm_grid |&gt; \n  st_transform(crs = st_crs(countries))\n\n# UTM 이름 재정의\nutm_grid &lt;- utm_grid |&gt; \n  mutate(\n    utm_name = str_c(ZONE, ROW_)\n  ) |&gt; \n  relocate(\n    utm_name\n  )\n\n\n지도 제작 및 저장\n\n\nutm_grid_korea &lt;- utm_grid |&gt; \n  filter(\n    utm_name %in% c(\"51T\", \"52T\", \"51S\", \"52S\")\n  ) |&gt; \n  st_transform(crs = st_crs(countries))\n\nutm_bound &lt;- c(81, -4, 171, 60)\nmy_map &lt;- tm_shape(utm_grid_korea, bbox = utm_bound) + tm_fill(col = \"gray80\", lwd = 1, border.col = \"black\") + \n  tm_shape(countries) + tm_borders(col = \"gray50\", lwd = 0.75) +\n  tm_shape(utm_grid) + tm_borders(col = \"black\", lwd = 1) + \n  tm_text(text = \"utm_name\", size = 0.7, col = \"gray20\") +\n  tm_graticules(x = seq(84, 168, 6), y = seq(0, 56, 8), lwd = 0, labels.size = 0.5)\nmy_map\n\n\n\n\n\n\nasp_r &lt;- get_asp_ratio(my_map)\nmy.file.name &lt;- paste0(\"outputs/6_2_1.png\") \ntmap_save(my_map, filename = my.file.name, width = 5.75, dpi = 600)\n\n다음으로 서울이 포함된 북반구 52구역에 대한 투영을 실행한다. epsg.io의 검색 결과 EPSG:32652임을 확인한다.\n\n# N52를 중심으로 한 대략적인 지역 선정\nbb_utm_52 &lt;- tibble(x = c(81, 81, 171, 171), y = c(-4, 60, -4, 60)) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\"), crs = 4326) |&gt; \n  st_bbox() |&gt; \n  st_as_sfc()\n\n# 국가 셰이프 파일에서 해당 부분만 골라내기\ncountries_bb &lt;- st_intersection(countries, bb_utm_52) |&gt; \n  st_make_valid()\n\n# UTM N52의 투영법 적용(EPSG:32652)\ncountries_bb_utm &lt;- st_transform(countries_bb, crs = 32652)\n\n# UTM N52의 가상원점 지정\norigin_n52 &lt;- st_as_sf(tibble(x = 0, y = 0), coords = c(\"x\", \"y\"), crs = 32652) |&gt; \n  st_transform(crs = st_crs(countries))\n\n# 서울 지점 셰이프 만들기\nseoul_point &lt;- st_as_sf(tibble(x = 126.9352778, y = 37.5700057), coords = c(\"x\", \"y\"), crs = 4326)\n\n# 그리드 생성 영역을 지정하고 그리드 생성\nbb_n52 &lt;- tibble(x = c(0, 1000000), y = c(-1000000, 7000000)) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\"), crs = 32652) |&gt; \n  st_bbox() |&gt; \n  st_as_sfc()\n\nbb_n52_grid &lt;- st_make_grid(bb_n52, 100000)\n\n# 지도 표현 영역 지정\nbb &lt;- c(-3000000, -500000, 3500000, 6000000)\nmy_map &lt;- tm_shape(countries_bb_utm, bbox = bb) + tm_fill() +\n  tm_graticules(x = seq(84, 172, 6), y = seq(0, 40, 10), lwd = 1.5) +\n  tm_shape(bb_n52_grid) + tm_borders(lwd = 0.5) +\n  tm_shape(origin_n52) + tm_symbols(col = \"red\", size = 0.5) +\n  tm_shape(seoul_point) + tm_symbols(col = \"black\", size = 0.2)\nmy_map\n\n\n\n\n\n\nmy.file.name &lt;- paste0(\"outputs/6_2_2.png\") \ntmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)\n\n\n6.3.5 IMW 좌표계\n\n6.3.5.1 IMW 좌표계의 개요\n\n\n\n\n\n6.3.5.2 IMW 좌표계와 우리나라\n우리나라와 그 주변에 대해 IWM 구역 체계를 보여주는 지도를 제작한다.\n\n# IMW 그리드 파일을 불러온다.\nimw_grid &lt;- st_read(\n  \"imw_grid.shp\", options = \"ENCODING=CP949\") |&gt; \n  st_transform(crs = st_crs(countries))\n\noptions:        ENCODING=CP949 \nReading layer `imw_grid' from data source `D:\\R_Books\\Cartography\\imw_grid.shp' using driver `ESRI Shapefile'\nSimple feature collection with 2132 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 90\nGeodetic CRS:  WGS 84\n\nimw_bd &lt;- c(88, 20, 164, 60)\nmy_map &lt;- tm_shape(countries, bbox = imw_bd) + tm_fill() +\n  tm_shape(imw_grid) + tm_borders() +\n  tm_text(\"imw_id\", size = 0.5) +\n  tm_graticules(x = seq(90, 162, 6), y = seq(20, 60, 4))\nmy_map\n\n\n\n\n\n\nmy.file.name &lt;- paste0(\"outputs/6_2_3.png\") \ntmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)\n\n우리나라에 해당하는 IWM 구역과 1:250,000 지세도를 그린다.\n\n# IWM 중 NJ51, NJ52, NI51, NI52만 고르기\nimw_kr_south &lt;- imw_grid |&gt; \n  filter(\n    imw_id %in% c(\"NJ51\", \"NJ52\", \"NI51\", \"NI52\")\n  )\n\ntm_shape(imw_kr_south, projection = 5178) + tm_borders()\n\n\n\n\n\n\n# 시도 행정구역 지도를 불러옴\nsido &lt;- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2021_4Q/NOT_MOVE/SIDO_NM_2021_4Q_GEN_0040.shp\", options = \"ENCODING=CP949\") \n\noptions:        ENCODING=CP949 \nReading layer `SIDO_NM_2021_4Q_GEN_0040' from data source \n  `D:\\My R\\Korean Administrative Areas\\행정구역 셰이프 파일\\3 Generalization\\2021_4Q\\NOT_MOVE\\SIDO_NM_2021_4Q_GEN_0040.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 17 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 746255.1 ymin: 1464095 xmax: 1387941 ymax: 2068161\nProjected CRS: KGD2002 / Unified CS\n\n# 지형도 인덱스: 국토지리정보원에서 다운받은 것: 누락된 것이 있음.\ntopo_25 &lt;- st_read(\n  \"D:/My R/Vector Data Manipulation Korea/Korea_Topo_Index/INDEX/TN_MAPINDX_25K.gpkg\", options = \"ENCODING=CP949\")\n\noptions:        ENCODING=CP949 \nReading layer `TN_MAPINDX_25K' from data source \n  `D:\\My R\\Vector Data Manipulation Korea\\Korea_Topo_Index\\INDEX\\TN_MAPINDX_25K.gpkg' \n  using driver `GPKG'\nSimple feature collection with 924 features and 3 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 769102.8 ymin: 1448883 xmax: 1388735 ymax: 2056078\nProjected CRS: KGD2002 / Unified CS\n\ntopo_50 &lt;- st_read(\n  \"D:/My R/Vector Data Manipulation Korea/Korea_Topo_Index/INDEX/TN_MAPINDX_50K.gpkg\", options = \"ENCODING=CP949\")\n\noptions:        ENCODING=CP949 \nReading layer `TN_MAPINDX_50K' from data source \n  `D:\\My R\\Vector Data Manipulation Korea\\Korea_Topo_Index\\INDEX\\TN_MAPINDX_50K.gpkg' \n  using driver `GPKG'\nSimple feature collection with 263 features and 3 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 769102.8 ymin: 1434898 xmax: 1400507 ymax: 2056219\nProjected CRS: KGD2002 / Unified CS\n\ntopo_250 &lt;- st_read(\n  \"D:/My R/Vector Data Manipulation Korea/Korea_Topo_Index/INDEX/TN_MAPINDX_250K.gpkg\", options = \"ENCODING=CP949\")\n\noptions:        ENCODING=CP949 \nReading layer `TN_MAPINDX_250K' from data source \n  `D:\\My R\\Vector Data Manipulation Korea\\Korea_Topo_Index\\INDEX\\TN_MAPINDX_250K.gpkg' \n  using driver `GPKG'\nSimple feature collection with 26 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 676706.7 ymin: 1445472 xmax: 1400507 ymax: 2564834\nProjected CRS: KGD2002 / Unified CS\n\n# 지형도 인덱스: 대헌에게서 받은 것: 옛날 것임\ntopo_25 &lt;- st_read(\n  \"D:/My R/Vector Data Manipulation Korea/Korea_Topo_Index_Daeheon/c25000.shp\", options = \"ENCODING=CP949\")\n\noptions:        ENCODING=CP949 \nReading layer `c25000' from data source \n  `D:\\My R\\Vector Data Manipulation Korea\\Korea_Topo_Index_Daeheon\\c25000.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 833 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -9583.397 ymin: -40809.11 xmax: 632434.7 ymax: 570432.3\nProjected CRS: KGD2002_Central_Belt\n\ntopo_50 &lt;- st_read(\n  \"D:/My R/Vector Data Manipulation Korea/Korea_Topo_Index_Daeheon/c50000.shp\", options = \"ENCODING=CP949\")\n\noptions:        ENCODING=CP949 \nReading layer `c50000' from data source \n  `D:\\My R\\Vector Data Manipulation Korea\\Korea_Topo_Index_Daeheon\\c50000.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 245 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -20570.52 ymin: -38053.73 xmax: 633222.6 ymax: 584308.1\nProjected CRS: KGD2002_Central_Belt\n\ntopo_25 &lt;- topo_25 |&gt; \n  st_transform(crs = st_crs(sido))\ntopo_50 &lt;- topo_50 |&gt; \n  st_transform(crs = st_crs(sido))\ntopo_250 &lt;- topo_250 |&gt; \n  st_transform(crs = st_crs(sido))\n\n# 1:250,000 지세도 도엽 중 남한에 해당하는 것만 고르기\ntopo_250_south &lt;- topo_250 |&gt; \n  filter(\n    !MAPID_NM %in% c(\"회령\", \"나진\", \"만포진\", \"청진\", \"신의주\", \"장진\", \"성진\", \"평양\", \"함흥\")\n  )\n\n# 지도 제작\nbb &lt;- c(265000, 1300000, 1450000, 2275000)\nmy_map &lt;- tm_shape(topo_250_south, bbox = bb) + tm_borders() +\n  tm_shape(sido) + tm_fill(col = \"gray75\") +\n  tm_graticules(x = c(120, 126, 132), y = c(32, 36, 40)) +\n  tm_shape(topo_250_south) + tm_borders(lwd = 1.5, col = \"gray15\") + \n  tm_text(\"MAPID_NO\", size = 0.75) +\n  tm_credits(\"NJ51\", size = 1, position = c(0.125, 0.85)) +\n  tm_credits(\"NI51\", size = 1, position = c(0.075, 0.1)) +\n  tm_credits(\"NJ52\", size = 1, position = c(0.81, 0.84)) +\n  tm_credits(\"NI52\", size = 1, position = c(0.84, 0.08))\nmy_map\n\n\n\n\n\n\nmy.file.name &lt;- paste0(\"outputs/6_2_4.png\") \ntmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)\n\n1:250,000, 1:50,000, 1:25,000의 인덱싱 시스템을 보여주는 지도를 제작한다.\n\n# 경주와 대보만 추출함\n\ngyeongju &lt;- topo_50 |&gt; \n  filter(\n    MAP_NAM == \"경주\"\n  )\ndaebo &lt;- topo_25 |&gt; \n  filter(\n    MAP_NAM == \"대보\"\n  )\n\n# 지도 제작\nbb &lt;- c(620000, 1440000, 1300000, 1900000)\nmy_map &lt;- tm_shape(topo_50, bbox = bb) + tm_fill() + tm_borders() +\n  tm_shape(sido) + tm_borders(col = \"gray10\", lwd = 0.5) +\n  tm_shape(gyeongju) + tm_fill(col = \"gray50\") +\n  tm_shape(daebo) + tm_fill(col = \"gray50\") +\n  tm_graticules(lwd = 0.5) +\n  tm_shape(topo_250_south) + tm_borders(lwd = 1.5, col = \"gray15\") + \n  tm_text(\"MAPID_NO\", size = 1.25)\nmy_map\n\n\n\n\n\n\nmy.file.name &lt;- paste0(\"outputs/6_2_5.png\") \ntmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)\n\n\n6.3.6 우리나라 TM 좌표계\n우리나라의 TM 좌표계 지도를 제작한다.\n\n지리공간데이터 불러와 정리하기\n\n\ntopo_250 |&gt; \n  st_transform(topo_250, crs = st_crs(sido))\n\nSimple feature collection with 26 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 676706.7 ymin: 1445472 xmax: 1400507 ymax: 2564834\nProjected CRS: KGD2002 / Unified CS\nFirst 10 features:\n     MAPID_NM MAPID_NO                           geom\n1        평양   NJ51-3 POLYGON ((700120.1 2200056,...\n2      진남포   NJ51-6 POLYGON ((695823.9 2089039,...\n3      대연평   NJ51-9 POLYGON ((691620.7 1978033,...\n4  격렬비열도  NJ51-12 POLYGON ((687511.5 1867041,...\n5        부남   NI51-3 POLYGON ((683497.8 1756060,...\n6      흑산도   NI51-6 POLYGON ((679580.5 1645087,...\n7        회령   NK52-5 POLYGON ((1040919 2527360, ...\n8        청진   NK52-8 POLYGON ((1041571 2416325, ...\n9        성진  NK52-11 POLYGON ((1042209 2305311, ...\n10       속초   NJ52-5 POLYGON ((1043448 2083338, ...\n\n# 투영 원점의 셰이프 파일 생성\norigins_df &lt;- tibble(x = c(125, 127, 129, 131), y = c(38, 38, 38, 38))\norigins &lt;- st_as_sf(origins_df, coords = c(\"x\", \"y\"), crs = 4326) \norigins &lt;- st_transform(origins, crs = st_crs(sido))\n\n# 개별 투영대의 평면 직각 좌표계 원점 셰이프 파일 생성: 개별 투영법에 의거 \norigin_west &lt;- st_as_sf(tibble(x = 0, y = 0), coords = c(\"x\", \"y\"), crs = 5185) |&gt; \n  st_transform(origin_west, crs = st_crs(sido))\norigin_mid &lt;- st_as_sf(tibble(x = 0, y = 0), coords = c(\"x\", \"y\"), crs = 5186) |&gt; \n  st_transform(origin_mid, crs = st_crs(sido))\norigin_east &lt;- st_as_sf(tibble(x = 0, y = 0), coords = c(\"x\", \"y\"), crs = 5187) |&gt; \n  st_transform(origin_east, crs = st_crs(sido))\norigin_sea &lt;- st_as_sf(tibble(x = 0, y = 0), coords = c(\"x\", \"y\"), crs = 5188) |&gt; \n  st_transform(origin_sea, crs = st_crs(sido))\n\n중부 투영대의 지도를 제작한다.\n\nbb_mid &lt;- tibble(x = c(-100000, 720000), y = c(-40000, 720000)) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\"), crs = 5186) |&gt; \n  st_bbox() |&gt; \n  st_as_sfc()\n\nbb_mid_grid &lt;- st_make_grid(bb_mid, 20000)\n\nmy_map &lt;- tm_shape(bb_mid_grid) + tm_borders(lty = \"dotted\", lwd = 0.5) +\n  tm_shape(sido) + tm_fill(col = \"gray75\") +\n  tm_graticules(x = c(123:132), lwd = 1.5) +\n  tm_shape(topo_50) + tm_borders(col = \"black\", lwd = 1.25) +\n  tm_shape(origins) + tm_symbols(col = \"black\", size = 0.5) +\n  tm_shape(origin_mid) + tm_symbols(col = \"red\", size = 0.5)\nmy_map\n\n\n\n\n\n\nmy.file.name &lt;- paste0(\"outputs/6_2_3.png\") \ntmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)\n\n동부 투영대의 지도를 제작한다.\n\nbb_east &lt;- tibble(x = c(-300000, 520000), y = c(-40000, 720000)) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\"), crs = 5187) |&gt; \n  st_bbox() |&gt; \n  st_as_sfc()\n\nbb_east_grid &lt;- st_make_grid(bb_east, 20000)\n\nmy_map &lt;- tm_shape(bb_east_grid) + tm_borders(lty = \"dotted\", lwd = 0.5) +\n  tm_shape(sido) + tm_fill(col = \"gray75\") +\n  tm_graticules(x = c(123:132), lwd = 1.5) +\n  tm_shape(gyeongju) + tm_fill(col = \"gray50\") +\n  tm_shape(topo_50) + tm_borders(col = \"black\", lwd = 1.25) +\n  tm_shape(origins) + tm_symbols(col = \"black\", size = 0.5) +\n  tm_shape(origin_east) + tm_symbols(col = \"red\", size = 0.5)\nmy_map\n\n\n\n\n\n\nmy.file.name &lt;- paste0(\"outputs/6_2_4.png\") \ntmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)\n\n동해 투영대의 지도를 제작한다.\n\nbb_sea &lt;- tibble(x = c(-500000, 320000), y = c(-40000, 720000)) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\"), crs = 5188) |&gt; \n  st_bbox() |&gt; \n  st_as_sfc()\n\nbb_sea_grid &lt;- st_make_grid(bb_sea, 20000)\n\nmy_map &lt;- tm_shape(bb_sea_grid) + tm_borders(lty = \"dotted\", lwd = 0.5) +\n  tm_shape(sido) + tm_fill(col = \"gray75\") +\n  tm_graticules(x = c(123:132), lwd = 1.5) +\n  tm_shape(topo_50) + tm_borders(col = \"black\", lwd = 1.25) +\n  tm_shape(origins) + tm_symbols(col = \"black\", size = 0.5) +\n  tm_shape(origin_sea) + tm_symbols(col = \"red\", size = 0.5)\nmy_map\n\n\n\n\n\n\nmy.file.name &lt;- paste0(\"outputs/6_2_5.png\") \ntmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)\n\n서부 투영대의 지도를 제작한다.\n\nbb_west &lt;- tibble(x = c(100000, 920000), y = c(-40000, 720000)) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\"), crs = 5185) |&gt; \n  st_bbox() |&gt; \n  st_as_sfc()\n\nbb_west_grid &lt;- st_make_grid(bb_west, 20000)\n\nmy_map &lt;- tm_shape(bb_west_grid) + tm_borders(lty = \"dotted\", lwd = 0.5) +\n  tm_shape(sido) + tm_fill(col = \"gray75\") +\n  tm_graticules(x = c(123:132), lwd = 1.5) +\n  tm_shape(topo_50) + tm_borders(col = \"black\", lwd = 1.25) +\n  tm_shape(origins) + tm_symbols(col = \"black\", size = 0.5) +\n  tm_shape(origin_west) + tm_symbols(col = \"red\", size = 0.5)\nmy_map\n\n\n\n\n\n\nmy.file.name &lt;- paste0(\"outputs/6_2_6.png\") \ntmap_save(my_map, filename = my.file.name,  width = 5.75, dpi = 600)\n\n\n6.3.7 국가 그리드\n\n6.3.7.1 미국의 SPCS83\n\n\n\nhttps://gisgeography.com/state-plane-coordinate-system-spcs/\n\n\n6.3.7.2 일본의 TM 좌표계\n\n\n\n\n\n6.3.7.3 영국의 BNG(British National Grid)\n\n\n\n\n\n6.3.8 CRS\n\n6.3.8.1 정의\n\n6.3.8.2 방식\n\n6.3.8.3 주요 적용 사례\n\n\n\nhttps://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system\nhttps://gisgeography.com/state-plane-coordinate-system-spcs/",
    "crumbs": [
      "지도 투영",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>좌표계</span>"
    ]
  }
]