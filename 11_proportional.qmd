---
title: "도형표현도"
author: Sang-Il Lee
date-modified: last-modified
number-sections: true
format: 
  html: 
    toc: true
code-link: true
code-copy: true
execute: 
  warning: false
  error: false
  freeze: auto
editor: visual
editor_options: 
  chunk_output_type: console
---

## 기본 개념

### 지도 제작 데이터

-   필수적인 패키지

```{r}
library(tidyverse) 
library(readxl) 
library(sf) 
library(tmap)
library(ggspatial)
```

-   형상 데이터 불러오기

```{r}
#| results: hide
sido <- st_read("D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/SIDO_2020_2Q_GEN_0050.shp", options = "ENCODING=CP949")
sigun1 <- st_read("D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/SIGUN1_2020_2Q_GEN_0050.shp", options = "ENCODING=CP949")
sigungu1 <- st_read("D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/SIGUNGU1_2020_2Q_GEN_0050.shp", options = "ENCODING=CP949")
emd <- st_read("D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/EMD_2020_2Q_GEN_0050.shp", options = "ENCODING=CP949")
sido_polyline <- st_read("D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/SIDO_Polyline_2020_2Q_GEN_0050.shp", options = "ENCODING=CP949")
bbox_ulleung <- st_read("D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/BBOX_Ulleung_2020_2Q_GEN_0050.shp", options = "ENCODING=CP949")
bbox_seohae <- st_read("D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/BBOX_Seohae3_2020_2Q_GEN_0050.shp", options = "ENCODING=CP949")
seoul_gu <- st_read(
  "D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2021_4Q/SEOUL_GU_2021_4Q.shp", options = "ENCODING=CP949"
  ) 
seoul_sido <- st_read(
  "D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2021_4Q/SEOUL_SIDO_2021_4Q.shp", options = "ENCODING=CP949"
  )
```

-   인구 데이터

```{r}
pop_SDGG <- read_excel(path = "D:/My R/Population Geography/1 Population Growth/POP_1975_2021_SDGG.xlsx")
pop_data <- pop_SDGG |> 
  select(Code, Region, pop_2015 = `2015`, pop_2020 = `2020`) |> 
  mutate(
    pgr = 0.2*log(pop_2020/pop_2015) * 100
  )
```

-   면적 데이터

```{r}
area_data <- read_excel(path = "D:/My R/Korea Census Data Manipulation/11 Etc/DM_AREA_2020_SDGG.xlsx")
```

-   시군구1과 연결

```{r}
my_sgg_data <- sigungu1 |> 
  left_join(pop_data, join_by(SGG1_CD == Code)) |> 
  left_join(
    select(area_data, SDGG_CD, Area), join_by(SGG1_CD == SDGG_CD)
  ) |> 
  mutate(
    pop_den = pop_2020/(Area/1000000)
  )
```

-   시군1과 연결

```{r}
my_sg_data <- sigun1 |> 
  left_join(pop_data, join_by(SG1_CD == Code)) |> 
  left_join(
    select(area_data, SDGG_CD, Area), join_by(SG1_CD == SDGG_CD)
  ) |> 
  mutate(
    pop_den = pop_2020/(Area/1000000)
  )
```

### 도형표현도의 기본 원리

-   구 행정 구역 지도: 제작

```{r}
my_map <- tm_shape(seoul_gu) + tm_polygons()
my_map
```

-   구 행정 구역 지도: 저장

```{r}
#| echo: false
my_title <- "10_4_01"
my.path.name <- "outputs/"
my.file.name <- paste0(my.path.name, my_title, ".png")
tmap_save(
  my_map, 
  filename = my.file.name,  
  width = 12, dpi = 600)
```

-   센트로이드 지도: 지도 제작

```{r}
seoul_gu_pop <- seoul_gu |> 
  left_join(pop_data, join_by(SGG1_CD == Code)) |> 
  left_join(
    select(area_data, SDGG_CD, Area), join_by(SGG1_CD == SDGG_CD)
  ) |> 
  mutate(
    pop_den = pop_2020/(Area/1000000)
  )
  
seoul_gu_cent <- st_centroid(seoul_gu_pop)
my_map <- tm_shape(seoul_gu) + tm_polygons() +
  tm_shape(seoul_gu_cent) + 
  tm_dots(size = 0.5)
my_map
```

-   센트로이드 지도: 저장

```{r}
#| echo: false
my_title <- "10_4_02"
my.path.name <- "outputs/"
my.file.name <- paste0(my.path.name, my_title, ".png")
tmap_save(
  my_map, 
  filename = my.file.name,  
  width = 12, dpi = 600)
```

-   인구 도형표현도: 지도 제작

```{r}
my_map <- tm_shape(seoul_gu_pop) + tm_polygons() +
  tm_symbols(
    size = "pop_2020", scale = 8, legend.size.show = FALSE, alpha = 0.8
  )
my_map
```

-   인구 도형표현도: 저장

```{r}
#| echo: false
my_title <- "10_4_03"
my.path.name <- "outputs/"
my.file.name <- paste0(my.path.name, my_title, ".png")
tmap_save(
  my_map, 
  filename = my.file.name,  
  width = 12, dpi = 600)
```

-   인구밀도도: 지도 제작

```{r}
my_map <- tm_shape(seoul_gu_pop) + 
  tm_polygons(
    col = "pop_den",
    palette = "Greys", 
    style = "pretty",
    legend.show = FALSE
    # breaks = c(0, 10000, 15000, 20000, 25000, 30000, 35000, Inf), 
    # labels = c("< 10,000", "10,000 ~ 15,000", "15,000 ~ 20,000", "20,000 ~ 25,000", 
    #            "25,000 ~ 30,000", "30,000 ~ 35,000", ">= 35,000")
  )
my_map
```

-   인구밀도도: 저장

```{r}
#| echo: false
my_title <- "10_4_04"
my.path.name <- "outputs/"
my.file.name <- paste0(my.path.name, my_title, ".png")
tmap_save(
  my_map, 
  filename = my.file.name,  
  width = 12, dpi = 600)
```

### 비례 심볼의 척도화

### 원과 사각형

-   강원도 시군 데이터

```{r}
gangwon_sgg <- my_sgg_data |> 
  filter(SD_CD == 32)
```

-   원: 지도 제작

```{r}
my_map <- tm_shape(gangwon_sgg) + tm_borders() +
  tm_symbols(
    size = "pop_2020", scale = 9, 
    border.col = "gray20", alpha = 0.8, 
    legend.size.show = FALSE
  ) +
  tm_layout(
    title = "Symbol: Circle", title.size = 1.8
  ) +
  tm_scale_bar(breaks = seq(0, 50, 10), text.size = 0.4, color.dark = "gray60", position = c(0.025, 0.05)) +
  tm_credits("SANG-IL LEE, Geography Education at SNU, 2024", size = 0.8, position = c(0.025, 0.01))
my_map
```

-   원: 저장

```{r}
#| echo: false
my_title <- "10_4_05"
my.path.name <- "outputs/"
my.file.name <- paste0(my.path.name, my_title, ".png")
tmap_save(
  my_map, 
  filename = my.file.name,  
  width = 12, dpi = 600)
```

-   정사각형: 지도 제작

```{r}
my_map <- tm_shape(gangwon_sgg) + tm_borders() +
  tm_symbols(
    size = "pop_2020", scale = 9, shape = 22,
    border.col = "gray20", alpha = 0.8, 
    legend.size.show = FALSE
  ) +
  tm_layout(
    title = "Symbol: Square", title.size = 1.8
  ) +
  tm_scale_bar(breaks = seq(0, 50, 10), text.size = 0.4, color.dark = "gray60", position = c(0.025, 0.05)) +
  tm_credits("SANG-IL LEE, Geography Education at SNU, 2024", size = 0.8, position = c(0.025, 0.01))
my_map
```

-   정사각형: 저장

```{r}
#| echo: false
my_title <- "10_4_06"
my.path.name <- "outputs/"
my.file.name <- paste0(my.path.name, my_title, ".png")
tmap_save(
  my_map, 
  filename = my.file.name,  
  width = 12, dpi = 600)
```

### 척도법: 절대적 vs. 인지적

-   절대적 척도법: 지도 제작

```{r}
my_map <- tm_shape(gangwon_sgg) + tm_borders() +
  tm_symbols(
    size = "pop_2020", scale = 9, 
    border.col = "gray20", alpha = 0.8, 
    legend.size.show = TRUE,
    legend.size.is.portrait = TRUE,
    sizes.legend = c(50000, 100000, 200000, 300000), 
    sizes.legend.labels = c("50,000", "100,000", "200,000", "300,000"),
    title.size = "Population (2020)"
  ) +
  tm_layout(
    title = "Absolute Scaling", title.size = 1.8
  ) +
  tm_scale_bar(breaks = seq(0, 50, 10), text.size = 0.4, color.dark = "gray60", position = c(0.025, 0.05)) +
  tm_credits("SANG-IL LEE, Geography Education at SNU, 2024", size = 0.8, position = c(0.025, 0.01))
my_map
```

-   절대적 척도법: 저장

```{r}
#| echo: false
my_title <- "10_4_07"
my.path.name <- "outputs/"
my.file.name <- paste0(my.path.name, my_title, ".png")
tmap_save(
  my_map, 
  filename = my.file.name,  
  width = 12, dpi = 600)
```

-   인지적 척도법: 지도 제작

```{r}
my_map <- tm_shape(gangwon_sgg) + tm_borders() +
  tm_symbols(
    size = "pop_2020", scale = 9, perceptual = TRUE, 
    border.col = "gray20", alpha = 0.8, 
    legend.size.show = TRUE,
    legend.size.is.portrait = TRUE,
    sizes.legend = c(50000, 100000, 200000, 300000), 
    sizes.legend.labels = c("50,000", "100,000", "200,000", "300,000"),
    title.size = "Population (2020)"
  ) +
  tm_layout(
    title = "Perceptual Scaling", title.size = 1.8
  ) +
  tm_scale_bar(breaks = seq(0, 50, 10), text.size = 0.4, color.dark = "gray60", position = c(0.025, 0.05)) +
  tm_credits("SANG-IL LEE, Geography Education at SNU, 2024", size = 0.8, position = c(0.025, 0.01))
my_map
```

-   인지적 척도법: 저장

```{r}
#| echo: false
my_title <- "10_4_08"
my.path.name <- "outputs/"
my.file.name <- paste0(my.path.name, my_title, ".png")
tmap_save(
  my_map, 
  filename = my.file.name,  
  width = 12, dpi = 600)
```

## 다양한 도형 표현도

### 2020년 시군1 단위 도형표현도: 비례형

-   지도 제작

```{r}
#| fig-height: 8 
#| out-width: 70%
#| fig-align: center
my_map <- tm_shape(my_sg_data) + tm_borders() +
  tm_shape(sido_polyline) + tm_lines(col = "black", lwd = 2) +
  tm_shape(bbox_ulleung) + tm_lines(col = "black") +
  tm_shape(bbox_seohae) + tm_lines(col = "black") +
  tm_shape(my_sg_data) + 
  tm_symbols(size = "pop_2020", scale = 10, 
             col = "gray50", border.col = "gray20", alpha = 0.8, 
             sizes.legend = c(500000, 3000000, 10000000), sizes.legend.labels = c("50", "300", "1,000"), 
             size.max = 11000000,  
             legend.size.is.portrait = FALSE, title.size = "Population (10,000 Persons)"
             ) +
  tm_legend(
    legend.title.size = 1.25, 
    legend.text.size = 0.8, 
    legend.width = 0.7, 
    legend.position = c(0.6, 0.06)
  ) +
  tm_layout(
    title = "Population Distribution, 2020", title.size = 1.8,
    inner.margins = c(0.05, 0.025, 0.07, 0.05)
  ) +
  tm_scale_bar(breaks = seq(0, 200, 50), text.size = 0.4, color.dark = "gray60", position = c(0.53, 0.01)) +
  tm_credits("SANG-IL LEE, Geography Education at SNU, 2024", size = 0.8, position = c(0.025, 0.01))
my_map
```

-   저장

```{r}
#| echo: false
my_title <- "10_4_01"
my.path.name <- "outputs/"
my.file.name <- paste0(my.path.name, my_title, ".png")
tmap_save(
  my_map, 
  filename = my.file.name,  
  height = 12, dpi = 600)
```

### 2020년 시군1 단위 도형포현도: 등급형

-   지도 제작

```{r}
#| fig-height: 8 
#| out-width: 70%
#| fig-align: center

my_sg_data_1 <- my_sg_data |> 
  mutate(
    pop_2020_class = case_when(
      pop_2020 < 100000 ~ 25000,
      pop_2020 >= 100000 & pop_2020 < 250000 ~ 150000,
      pop_2020 >= 250000 & pop_2020 < 500000 ~ 300000,
      pop_2020 >= 500000 & pop_2020 < 1000000 ~ 700000,
      pop_2020 >= 1000000 & pop_2020 < 3000000 ~ 1500000,
      pop_2020 >= 3000000 ~ 3000000
    )
  )

my_map <- tm_shape(my_sg_data_1) + tm_borders() +
  tm_shape(sido_polyline) + tm_lines(col = "black", lwd = 2) +
  tm_shape(bbox_ulleung) + tm_lines(col = "black") +
  tm_shape(bbox_seohae) + tm_lines(col = "black") +
  tm_shape(my_sg_data_1) + 
  tm_symbols(size = "pop_2020_class", scale = 10, 
             col = "gray50", border.col = "gray20", alpha = 0.8, 
             sizes.legend = c(25000, 150000, 300000, 700000, 1500000, 3000000), 
             sizes.legend.labels = c("< 10", "10~25", "25~50", 
                                     "50~100", "100~300", ">= 300"), 
             size.max = 8000000,  
             legend.size.is.portrait = FALSE, title.size = "Population (10,000 Persons)"
             ) +
  tm_legend(
    legend.title.size = 1.25, 
    legend.text.size = 0.8, 
    legend.width = 0.8, 
    legend.position = c(0.45, 0.05)
  ) +
  tm_layout(
    title = "Population Distribution, 2020", title.size = 1.8,
    inner.margins = c(0.05, 0.025, 0.07, 0.05)
  ) +
  tm_scale_bar(breaks = seq(0, 200, 50), text.size = 0.4, color.dark = "gray60", position = c(0.53, 0.01)) +
  tm_credits("SANG-IL LEE, Geography Education at SNU, 2024", size = 0.8, position = c(0.025, 0.01))
my_map
```

-   저장

```{r}
#| echo: false
my_title <- "10_4_02"
my.path.name <- "outputs/"
my.file.name <- paste0(my.path.name, my_title, ".png")
tmap_save(
  my_map, 
  filename = my.file.name,  
  height = 12, dpi = 600)
```

## 도형표현도의 확장

### 인구규모와 인구성장률

-   지도 제작

```{r}
#| fig-height: 8 
#| out-width: 70%
#| fig-align: center
my_map <- tm_shape(my_sg_data) + tm_polygons(col = "gray98") +
  tm_shape(sido_polyline) + tm_lines(col = "black", lwd = 2) +
  tm_shape(bbox_ulleung) + tm_lines(col = "black") +
  tm_shape(bbox_seohae) + tm_lines(col = "black") +
  tm_shape(my_sg_data) + 
  tm_symbols(size = "pop_2020", scale = 10, 
             col = "pgr", palette = "-RdBu",
             breaks = c(-Inf, -2, -1, 0, 1, 2, Inf),
             labels = c("< -2", "-2 ~ -1", "-1 ~ 0", "0 ~ 1", "1 ~ 2", ">= 2"),
             border.col = "gray20", alpha = 0.8, 
             sizes.legend = c(500000, 3000000, 10000000), 
             sizes.legend.labels = c("500,000", "3,000,000", "10,000,000"), 
             size.max = 11000000,  
             shapes.legend.fill = "gray90",
             legend.size.is.portrait = FALSE, 
             legend.col.z = 1, 
             legend.size.z = 2, 
             title.size = "Population (2020)",
             title.col = "PGR (%, 2015~2020)"
             ) +
  tm_legend(
    legend.stack = "vertical",
    legend.title.size = 1.25, 
    legend.text.size = 0.8, 
    legend.width = 0.8, 
    legend.position = c(0.58, 0.025)
  ) +
  tm_layout(
    title = "Population Distribution and Growth", title.size = 1.8,
    inner.margins = c(0.1, 0.05, 0.07, 0.07)
    # inner.margins = c(0.05, 0.025, 0.07, 0.05)
  ) +
  tm_scale_bar(breaks = seq(0, 200, 50), text.size = 0.4, 
               color.dark = "gray60", position = c(0.53, 0.005)) +
  tm_credits("SANG-IL LEE, Geography Education at SNU, 2024", 
             size = 0.8, position = c(0.025, 0.005))
my_map
```

-   저장

```{r}
#| echo: false
my_title <- "10_4_07"
my.path.name <- "outputs/"
my.file.name <- paste0(my.path.name, my_title, ".png")
tmap_save(
  my_map, 
  filename = my.file.name,  
  height = 12, dpi = 600)
```
