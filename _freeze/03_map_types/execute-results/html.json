{
  "hash": "f82d0780d5307cbc53aa677c7b85dc63",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"지도의 종류\"\nauthor: Sang-Il Lee\ndate-modified: last-modified\nnumber-sections: true\nformat: \n  html: \n    toc: true\ncode-link: true\ncode-copy: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto\neditor: visual\n---\n\n\n## 심상지도와 물리적 지도\n\n## 일반도와 주제도\n\n### 일반도\n\n### 주제도\n\n#### 전형적인 주제도\n\n-   필수적인 패키지 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \nlibrary(readxl) \nlibrary(sf) \nlibrary(tmap) \nlibrary(tmaptools)\nlibrary(rayshader)\nlibrary(pals) \n```\n:::\n\n\n-   지리공간데이터 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_EMD <- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2021_4Q/SEOUL_EMD_2021_4Q.shp\", options = \"ENCODING=CP949\"\n  ) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\noptions:        ENCODING=CP949 \nReading layer `SEOUL_EMD_2021_4Q' from data source \n  `D:\\My R\\Korean Administrative Areas\\행정구역 셰이프 파일\\2 Original Cleaning\\2021_4Q\\SEOUL_EMD_2021_4Q.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 426 features and 15 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 935035.3 ymin: 1936666 xmax: 972067.6 ymax: 1966987\nProjected CRS: KGD2002 / Unified CS\n```\n\n\n:::\n\n```{.r .cell-code}\nseoul_EMD_2020 <- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2020_2Q/SEOUL_EMD_2020_2Q.shp\", options = \"ENCODING=CP949\"\n  ) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\noptions:        ENCODING=CP949 \nReading layer `SEOUL_EMD_2020_2Q' from data source \n  `D:\\My R\\Korean Administrative Areas\\행정구역 셰이프 파일\\2 Original Cleaning\\2020_2Q\\SEOUL_EMD_2020_2Q.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 425 features and 15 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 935035.3 ymin: 1936666 xmax: 972067.6 ymax: 1966987\nProjected CRS: KGD2002 / Unified CS\n```\n\n\n:::\n\n```{.r .cell-code}\nseoul_gu <- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2021_4Q/SEOUL_GU_2021_4Q.shp\", options = \"ENCODING=CP949\"\n  ) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\noptions:        ENCODING=CP949 \nReading layer `SEOUL_GU_2021_4Q' from data source \n  `D:\\My R\\Korean Administrative Areas\\행정구역 셰이프 파일\\2 Original Cleaning\\2021_4Q\\SEOUL_GU_2021_4Q.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 25 features and 9 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 935035.3 ymin: 1936666 xmax: 972067.6 ymax: 1966987\nProjected CRS: KGD2002 / Unified CS\n```\n\n\n:::\n\n```{.r .cell-code}\nseoul_sido <- st_read(\n  \"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2021_4Q/SEOUL_SIDO_2021_4Q.shp\", options = \"ENCODING=CP949\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\noptions:        ENCODING=CP949 \nReading layer `SEOUL_SIDO_2021_4Q' from data source \n  `D:\\My R\\Korean Administrative Areas\\행정구역 셰이프 파일\\2 Original Cleaning\\2021_4Q\\SEOUL_SIDO_2021_4Q.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 935035.3 ymin: 1936666 xmax: 972067.6 ymax: 1966987\nProjected CRS: KGD2002 / Unified CS\n```\n\n\n:::\n:::\n\n\n-   지도 확인\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(seoul_EMD_2020)\n```\n\n::: {.cell-output-display}\n![](03_map_types_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n-   1인가구 속성 데이터 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhouse_SDGGEMD_2020 <- read_excel(\n  \"D:/My R/Population Geography/3 Population Structure/Housing_Size_2020_Adj.xlsx\", sheet = 1\n  )\nglimpse(house_SDGGEMD_2020)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,809\nColumns: 17\n$ Code     <dbl> 0, 3, 4, 5, 11, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 3…\n$ Region   <chr> \"전국\", \"동부\", \"읍부\", \"면부\", \"서울특별시\", \"부산광역시\", \"…\n$ T_house  <dbl> 20926710, 16896701, 2021664, 2008345, 3982290, 1405037, 98581…\n$ House1   <dbl> 6643354, 5300490, 620899, 721965, 1390701, 455207, 304543, 32…\n$ House2   <dbl> 5864525, 4533570, 600001, 730954, 1033901, 411455, 276237, 31…\n$ House3   <dbl> 4200629, 3498178, 394057, 308394, 792690, 282233, 205048, 251…\n$ House4   <dbl> 3271315, 2796159, 303647, 171509, 602791, 203769, 159654, 198…\n$ House5   <dbl> 761417, 625579, 81207, 54631, 130122, 42608, 33131, 44949, 24…\n$ House6   <dbl> 147172, 115014, 16862, 15296, 25770, 7874, 5976, 8440, 4011, …\n$ House7   <dbl> 38298, 27711, 4991, 5596, 6315, 1891, 1227, 2127, 941, 967, 5…\n$ House1_p <dbl> 31.74581, 31.36997, 30.71227, 35.94826, 34.92214, 32.39822, 3…\n$ House2_p <dbl> 28.02411, 26.83110, 29.67857, 36.39584, 25.96247, 29.28428, 2…\n$ House3_p <dbl> 20.07305, 20.70332, 19.49172, 15.35563, 19.90538, 20.08723, 2…\n$ House4_p <dbl> 15.632247, 16.548550, 15.019657, 8.539818, 15.136793, 14.5027…\n$ House5_p <dbl> 3.638494, 3.702374, 4.016840, 2.720200, 3.267517, 3.032518, 3…\n$ House6_p <dbl> 0.7032735, 0.6806891, 0.8340654, 0.7616221, 0.6471151, 0.5604…\n$ House7_p <dbl> 0.1830101, 0.1640024, 0.2468758, 0.2786374, 0.1585771, 0.1345…\n```\n\n\n:::\n:::\n\n\n-   결합하기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_EMD_2020 <- seoul_EMD_2020 |> \n  mutate(\n    EMD_ID = as.numeric(EMD_ID)\n  )\nmy_df <-seoul_EMD_2020 |> \n  left_join(\n    house_SDGGEMD_2020, join_by(EMD_ID == Code)\n  )\n```\n:::\n\n\n-   전형적인 주제도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin_max <- my_df |> \n  st_drop_geometry() |> \n  summarize(\n    min_value = format(round(min(House1_p, na.rm = TRUE), \n                             digits = 1), nsmall = 1),\n    max_value = format(round(max(House1_p, na.rm = TRUE), \n                             digits = 1), nsmall = 1)\n  )\nmin.val <- min_max[[1]]\nmax.val <- min_max[[2]]\n\nmy_map <- tm_shape(my_df) +\n  tm_polygons(\n    \"House1_p\",\n    style = \"fixed\", \n    palette = \"BuPu\", \n    border.col = \"gray40\", \n    lwd = 0.25, \n    border.alpha = 1, \n    breaks = c(-Inf, 15, 25, 35, 45, 55, 65, Inf),\n    labels = c(paste0(\"< 15\", \" (Min. \", min.val, \")\"), \n               \"15 ~ 25\", \"25 ~ 35\", \"35 ~ 45\", \"45 ~ 55\", \n               \"55 ~ 65\", paste0(\">= 65\", \" (Max. \", max.val, \")\")), \n    title = \"One-Person (%)\", \n    legend.hist = FALSE, \n    legend.show = TRUE) +\n  tm_shape(seoul_gu) + \n  tm_polygons(alpha = 0, border.col = \"gray20\", lwd = 0.75) +\n  tm_legend(\n    legend.format = list(digits = 1), \n    legend.title.size = 0.6, \n    legend.text.size = 0.45,\n    legend.position = c(0.85, 0.05)) +\n  tm_layout(\n    frame = TRUE, \n    title = \"One-Person Households in Seoul, 2020\", \n    title.position = c(\"center\", \"top\"), \n    title.size = 0.9,\n    bg.color = \"white\",\n    inner.margins = c(0.05, 0.05, 0.08, 0.12)) +\n  tm_scale_bar(\n    color.dark = \"gray60\",\n    text.size = 0.25,\n    breaks = seq(0, 10, 2),\n    position = c(0.03, 0.01)) + \n  tm_credits(\n    \"SANG-IL LEE, Geograhy Education at SNU, 2024\", \n    size = 0.3, position = c(0.78, 0.01)\n    )\n\nmy_map\n```\n\n::: {.cell-output-display}\n![](03_map_types_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n### 일반도-주제도 연속체\n\n#### 피처맵\n\n-   지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- my_df |> \n  tm_shape() +\n  tm_borders(col = \"gray30\", lwd = 0.25)\nmy_map\n```\n\n::: {.cell-output-display}\n![](03_map_types_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n#### 사건 분포도\n\n-   사망 교통사고 데이터 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccident <- st_read(\"D:/My R/Vector Data Manipulation Korea/Public_Data_Portal/accident_seoul_2022.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `accident_seoul_2022' from data source \n  `D:\\My R\\Vector Data Manipulation Korea\\Public_Data_Portal\\accident_seoul_2022.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 215 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 938902 ymin: 1939409 xmax: 969421 ymax: 1964119\nProjected CRS: KGD2002 / Unified CS\n```\n\n\n:::\n:::\n\n\n-   지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- my_df |> \n  tm_shape() + \n  tm_borders(col = \"gray30\", lwd = 0.25) +\n  tm_shape(accident) + tm_dots(size = 0.15)\nmy_map\n```\n\n::: {.cell-output-display}\n![](03_map_types_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n#### 정성적 주제도\n\n-   지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- my_df |> \n  tm_shape() + \n  tm_polygons(\n    col = \"SGG1_NM\",\n    border.col = \"gray30\", lwd = 0.25, \n    palette = pals::alphabet2(),\n    legend.show = FALSE\n    )\nmy_map\n```\n\n::: {.cell-output-display}\n![](03_map_types_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n#### 정량적 주제도\n\n-   지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- my_df |> \n  tm_shape() + \n  tm_polygons(\n    col = \"House1_p\",\n    breaks = c(-Inf, 15, 25, 35, 45, 55, 65, Inf),\n    palette = \"Oranges\",\n    border.col = \"gray30\", lwd = 0.25, \n    legend.show = FALSE\n    )\nmy_map\n```\n\n::: {.cell-output-display}\n![](03_map_types_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n## 정성적 주제도와 정량적 주제도\n\n### 정량적 주제도\n\n#### 서울의 인구분포 사례\n\n-   인구수 속성 데이터 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\npop_SDGGEMD_2020 <- read_excel(\n  \"D:/My R/Korea Census Data Manipulation/1 Population Basic/DM_ADJ_Census_2020.xlsx\", sheet = 1\n  )\n```\n:::\n\n\n-   결합하기: 위와 구분하기 위해 `my_df_2`라고 지정\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_df_2 <-seoul_EMD_2020 |> \n  left_join(\n    pop_SDGGEMD_2020, join_by(EMD_ID == Code)\n  )\n```\n:::\n\n\n-   인구밀도 계산\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_df_2$area <- st_area(my_df_2) / 1000000\nmy_df_2 <- my_df_2 |> \n  mutate(\n    pop_den_t = pop_t / area\n  )\n```\n:::\n\n\n#### 도형표현도\n\n-   지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(my_df_2) + \n  tm_borders(col = \"gray10\", lwd = 0.25) +\n  tm_shape(seoul_gu) + tm_borders(col = \"gray10\", lwd = 0.75) +\n  tm_shape(my_df_2) + \n  tm_symbols(size = \"pop_t\", scale = 1.5, alpha = 0.75, \n             col = \"#a63603\",\n             legend.size.show = FALSE) +\n  tm_scale_bar(\n    color.dark = \"gray60\",\n    text.size = 0.25,\n    breaks = seq(0, 10, 2),\n    position = c(0.03, 0.01)) + \n  tm_credits(\n    \"SANG-IL LEE, Geograhy Education at SNU, 2024\", \n    size = 0.3, position = c(0.78, 0.01)\n    )\nmy_map\n```\n\n::: {.cell-output-display}\n![](03_map_types_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n#### 점밀도도\n\n-   포인트 생성: 시간이 조금 걸리므로 따로 실행\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_seoul_point <- my_df_2 |> \n  st_sample(size = round(my_df_2$pop_t/500), \n            type = \"random\", exact = TRUE) |> \n  st_sf()\n```\n:::\n\n\n-   지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(my_df_2) + \n  tm_borders(col = \"gray10\", lwd = 0.25) +\n  tm_shape(my_seoul_point) + \n  tm_dots(size = 0.02, alpha = 0.75, col = \"#a63603\") +\n  tm_shape(seoul_gu) + tm_borders(col = \"gray10\", lwd = 0.75) +\n  tm_scale_bar(\n    color.dark = \"gray60\",\n    text.size = 0.25,\n    breaks = seq(0, 10, 2),\n    position = c(0.03, 0.01)) + \n  tm_credits(\n    \"SANG-IL LEE, Geograhy Education at SNU, 2024\", \n    size = 0.3, position = c(0.78, 0.01)\n    )\nmy_map\n```\n\n::: {.cell-output-display}\n![](03_map_types_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n#### 단계구분도\n\n-   지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(my_df_2) +\n  tm_polygons(\n    \"pop_den_t\",\n    style = \"fixed\", \n    palette = \"Oranges\", \n    border.col = \"gray40\", \n    lwd = 0.25, \n    border.alpha = 1, \n    breaks = c(-Inf, 10000, 15000, 20000, 25000, 30000, 40000, Inf),\n    legend.show = FALSE) +\n  tm_shape(seoul_gu) + \n  tm_polygons(alpha = 0, border.col = \"gray20\", lwd = 0.75) +\n  tm_credits(\n    \"SANG-IL LEE, Geograhy Education at SNU, 2024\", \n    size = 0.3, position = c(0.78, 0.01)\n    )\nmy_map\n```\n\n::: {.cell-output-display}\n![](03_map_types_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n#### 등치선도\n\n-   준비 과정\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# sp로 만들기\nlibrary(sp)\nmy_centroid <- st_centroid(my_df_2)\nmy_centroid_sp <- as(my_centroid, \"Spatial\")\nmy_df_2_sp <- as(my_df_2, \"Spatial\")\nmy_seoul <- st_union(seoul_gu)\nmy_seoul_sp <- as(my_seoul, \"Spatial\")\n\n# 인터폴레이션을 위한 바탕 래스터 만들고 정의하기 \nlibrary(terra)\ngrd <- as.data.frame(spsample(my_seoul_sp, \"regular\", n = 100000))\nnames(grd) <- c(\"X\", \"Y\")\ncoordinates(grd) <- c(\"X\", \"Y\")\ngridded(grd) <- TRUE\nfullgrid(grd) <- TRUE\ncrs(grd) <- crs(my_centroid_sp)\n\n# TPS (thin plate spline) 방식의 인터폴레이션 실행 및 등치선 생성\nlibrary(fields)\nlibrary(raster)\nm <- Tps(coordinates(my_centroid_sp), my_centroid_sp$pop_den_t)\ntps <- interpolate(raster(grd), m)\ntps <- mask(tps, my_seoul_sp)\ncrs(tps) <- CRS('+init=EPSG:5179') # 힘들었음. st_crs()는 먹지 않음.\ncont.tps <- rasterToContour(tps)\n```\n:::\n\n\n-   지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(tps) + \n  tm_raster(\n    style = \"fixed\", \n    breaks = c(-Inf, 10000, 15000, 20000, 25000, 30000, 40000, Inf),     palette = \"Oranges\", legend.show = FALSE) +\n  tm_shape(subset(\n    cont.tps, \n    level %in% c(10000, 15000, 20000, 25000, 30000, 40000))) +  \n  tm_iso(\n      text = \"level\", \n      color = \"black\", \n      lwd = 0.5, \n      size = 0.5, \n      alpha = 0.7) +\n  tm_shape(seoul_gu) + \n  tm_polygons(alpha = 0, border.col = \"gray20\", lwd = 0.75) +\n  tm_credits(\n    \"SANG-IL LEE, Geograhy Education at SNU, 2024\", \n    size = 0.3, position = c(0.78, 0.01)\n    )\nmy_map\n```\n\n::: {.cell-output-display}\n![](03_map_types_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n## 단변량 주제도와 다변량 주제도\n\n## 대축척 주제도와 소축척 주제도\n",
    "supporting": [
      "03_map_types_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}