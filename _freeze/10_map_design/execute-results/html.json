{
  "hash": "04f53034003b8b0ace650cba5b8570ea",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"주제도 제작의 절차와 지도 디자인\"\nauthor: Sang-Il Lee\ndate-modified: last-modified\nnumber-sections: true\nformat: \n  html: \n    toc: true\ncode-link: true\ncode-copy: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n## 주제도 제작의 절차\n\n## 지도 디자인\n\n### 행정구역\n\n#### 데이터 준비\n\n-   필수적인 패키지 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \nlibrary(readxl) \nlibrary(sf) \nlibrary(tmap)\nlibrary(ggspatial)\n```\n:::\n\n\n-   형상 데이터 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsido <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/SIDO_2020_2Q_GEN_0050.shp\", options = \"ENCODING=CP949\")\nsigun1 <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/SIGUN1_2020_2Q_GEN_0050.shp\", options = \"ENCODING=CP949\")\nsigungu1 <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/SIGUNGU1_2020_2Q_GEN_0050.shp\", options = \"ENCODING=CP949\")\nemd <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/EMD_2020_2Q_GEN_0050.shp\", options = \"ENCODING=CP949\")\nsido_polyline <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/SIDO_Polyline_2020_2Q_GEN_0050.shp\", options = \"ENCODING=CP949\")\nbbox_ulleung <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/BBOX_Ulleung_2020_2Q_GEN_0050.shp\", options = \"ENCODING=CP949\")\nbbox_seohae <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_2Q/BBOX_Seohae3_2020_2Q_GEN_0050.shp\", options = \"ENCODING=CP949\")\n```\n:::\n\n\n#### 시도 경계 지도\n\n-   지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(sido) + tm_polygons() +\n  tm_shape(sido_polyline) + tm_lines(col = \"black\", lwd = 1.75) +\n  tm_shape(bbox_ulleung) + tm_lines() +\n  tm_shape(bbox_seohae) + tm_lines() +\n  tm_layout(inner.margins = c(0.02, 0.02, 0.02, 0.03))\nmy_map \n```\n\n::: {.cell-output-display}\n![](10_map_design_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n-   `ggplot2`: 지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- ggplot() +\n  geom_sf(data = sido) +\n  geom_sf(data = sido_polyline) +\n  geom_sf(data = bbox_ulleung) +\n  geom_sf(data = bbox_seohae) +\n  annotation_scale(location = \"br\", bar_cols = c(\"gray40\", \"white\"), width_hint = 0.4) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(color = \"gray20\", fill = \"white\")\n  )\nmy_map\n```\n\n::: {.cell-output-display}\n![](10_map_design_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n-   `ggplot2`: 저장\n\n\n::: {.cell}\n\n:::\n\n\n#### 시군구 경계 지도\n\n-   지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(sigungu1) + tm_polygons() +\n  tm_shape(sido_polyline) + tm_lines(col = \"black\", lwd = 1.75) +\n  tm_shape(bbox_ulleung) + tm_lines() +\n  tm_shape(bbox_seohae) + tm_lines() +\n  tm_scale_bar(breaks = seq(0, 200, 50), text.size = 0.5, color.dark = \"gray60\", position = c(0.52, 0.01)) +\n  tm_layout(inner.margins = c(0.02, 0.02, 0.02, 0.03))\nmy_map\n```\n\n::: {.cell-output-display}\n![](10_map_design_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n-   ggplot2: 지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- ggplot() +\n  geom_sf(data = sigungu1) +\n  geom_sf(data = sido_polyline) + \n  geom_sf(data = bbox_ulleung) +\n  geom_sf(data = bbox_seohae) +\n  annotation_scale(location = \"br\", bar_cols = c(\"gray40\", \"white\"), width_hint = 0.4) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(color = \"gray20\", fill = \"white\")\n  )\nmy_map\n```\n\n::: {.cell-output-display}\n![](10_map_design_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n-   ggplot2: 저장\n\n\n::: {.cell}\n\n:::\n\n\n#### 읍면동 경계 지도\n\n-   지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(emd) + tm_polygons() +\n  tm_shape(sido_polyline) + tm_lines(col = \"black\", lwd = 1.75) +\n  tm_shape(bbox_ulleung) + tm_lines() +\n  tm_shape(bbox_seohae) + tm_lines() +\n  tm_scale_bar(breaks = seq(0, 200, 50), text.size = 0.5, color.dark = \"gray60\", position = c(0.52, 0.01)) +\n  tm_layout(inner.margins = c(0.02, 0.02, 0.02, 0.03))\nmy_map\n```\n\n::: {.cell-output-display}\n![](10_map_design_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n-   ggplot2: 지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- ggplot() +\n  geom_sf(data = emd) +\n  geom_sf(data = sido_polyline) +\n  geom_sf(data = bbox_ulleung) +\n  geom_sf(data = bbox_seohae) +\n  annotation_scale(location = \"br\", bar_cols = c(\"gray40\", \"white\"), width_hint = 0.4) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(color = \"gray20\", fill = \"white\")\n  )\nmy_map\n```\n\n::: {.cell-output-display}\n![](10_map_design_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n-   ggplot2: 저장\n\n\n::: {.cell}\n\n:::\n\n\n### 지도 디자인: 예시\n\n#### 데이터 준비\n\n읍면동 단위 인구밀도도\n\n-   형상 데이터 불러오기: 읍면동 변동을 반영한 데이터\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemd_adj <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2020_Census_Adj/EMD_2020_Census_GEN_0020.shp\", options = \"ENCODING=CP949\")\n```\n:::\n\n\n-   속성 데이터 불러오기: 읍면동 변동을 반영한 데이터\n\n\n::: {.cell}\n\n```{.r .cell-code}\npop_adj <- read_excel(\"D:/My R/Korea Census Data Manipulation/1 Population Basic/DM_ADJ_Census_2020.xlsx\", sheet = 1)\n```\n:::\n\n\n-   결합\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemd_adj <- emd_adj |> \n  mutate(EMD_ID = as.numeric(EMD_ID))\nemd_adj_data <- emd_adj |> \n  left_join(pop_adj, join_by(EMD_ID == Code)) |> \n  mutate(\n    pop_t = ifelse(is.na(pop_t), 0, pop_t)\n  )\n```\n:::\n\n\n-   인구밀도 계산\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemd_adj_data <- emd_adj_data |>\n  mutate(\n     area = geometry |> st_area() |> as.numeric()/1000000,\n     pop_den = pop_t / area\n  )\n```\n:::\n\n\n-   지도 제작\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbbox_ulleung_polygon <- bbox_ulleung |> \n  st_cast(\"POLYGON\")\n\nmy_map <- tm_graticules(col = \"white\", x = seq(126, 130, 1), y = seq(33, 39, 1)) +\n  tm_shape(bbox_ulleung_polygon) + tm_borders() + tm_fill(\"gray90\") +\n  tm_shape(emd_adj_data, is.master = TRUE) +\n  tm_polygons(col = \"pop_den\", breaks = c(0, 50, 250, 500, 1000, 5000, 10000, Inf),\n              palette = \"YlGnBu\", title = \"People per square km\",\n              # title = expression(paste(\"People / \", \"km\"^\"2\")),\n              border.col = NULL) +\n  tm_shape(sigungu1) + tm_borders() +\n  tm_shape(sido_polyline) + tm_lines(col = \"black\", lwd = 1.75) +\n  tm_shape(bbox_seohae) + tm_lines() +\n  tm_legend(legend.position = c(0.65, 0.06), legend.bg.color = \"white\",\n            legend.title.size = 1.5, legend.text.size = 1.2) +\n  tm_layout(bg.color = \"gray90\",\n            title = \"Population Distribution, 2020\", title.size = 1.8, \n            inner.margins = c(0.07, 0.035, 0.05, 0.05)) +\n  tm_scale_bar(breaks = seq(0, 200, 50), text.size = 0.5, color.dark = \"gray60\", position = c(0.52, 0.01)) +\n  tm_credits(\"SANG-IL LEE, Geography Education at SNU, 2024\", size = 0.7, position = c(0.025, 0.01))\n\nmy_map\n```\n\n::: {.cell-output-display}\n![](10_map_design_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n-   저장\n\n\n::: {.cell}\n\n:::\n\n\n-   인구 데이터\n\n\n::: {.cell}\n\n```{.r .cell-code}\npop_SDGG <- read_excel(path = \"D:/My R/Population Geography/1 Population Growth/POP_1975_2021_SDGG.xlsx\")\npop_data <- pop_SDGG |> \n  select(Code, Region, pop_2015 = `2015`, pop_2020 = `2020`) |> \n  mutate(\n    pgr = 0.2*log(pop_2020/pop_2015) * 100\n  )\n```\n:::\n\n\n-   면적 데이터\n\n\n::: {.cell}\n\n```{.r .cell-code}\narea_data <- read_excel(path = \"D:/My R/Korea Census Data Manipulation/11 Etc/DM_AREA_2020_SDGG.xlsx\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_data <- sigungu1 |> \n  left_join(pop_data, join_by(SGG1_CD == Code)) |> \n  left_join(\n    select(area_data, SDGG_CD, Area), join_by(SGG1_CD == SDGG_CD)\n  ) |> \n  mutate(\n    pop_den = pop_2020/(Area/1000000)\n  )\n```\n:::\n",
    "supporting": [
      "10_map_design_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}